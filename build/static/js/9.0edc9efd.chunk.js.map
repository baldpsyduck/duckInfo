{"version":3,"sources":["components/Tag/index.tsx","utils/getRandomColor.ts","components/MyPagination/Mypagination.tsx","pages/Project/ProjectList/ProjectCard.tsx","pages/Project/ProjectList/index.tsx"],"names":["Tag","props","TagText","color","Math","random","toString","styled","AntdTag","itemRender","current","type","originalElement","HistoryBtn","className","MyPagination","total","Container","pageSize","showSizeChanger","onChange","div","Pagination","ProjectCard","projectProps","onSelected","to","id","title","name","extra","size","hoverable","onSelect","alert","onClick","e","preventDefault","members","map","member","content","username","src","avatar","startAt","SwapRightOutlined","endAt","description","tags","tag","ThreeColumns","LikeOutlined","likes","StarOutlined","stars","EyeOutlined","watches","ProjectCardList","projectList","length","EmptyText","CardCointainer","item","span","initialSeachInfo","page","sort","MenuList","dispatch","useAppDispatch","setSort","info","setKey","proProjectList","then","res","console","log","set","projects","defaultSelectedKeys","Item","ProjectList","useState","setsort","useMemo","useAppSelector","store","PlSearchBar","SearchBar","height","width","placeholder","onBtnClick","text","search","PlPulldown","overlay","trigger","PulldownText","DownOutlined"],"mappings":"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","file":"static/js/9.0edc9efd.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Tag as AntdTag, TagProps } from \"antd\";\r\nimport getRandomColor from \"utils/getRandomColor\";\r\n\r\nexport default function Tag(props: TagProps) {\r\n    return (\r\n        <TagText color={props.color || getRandomColor()} {...props} />\r\n    )\r\n}\r\n\r\nconst TagText = styled(AntdTag)`\r\n  -webkit-text-stroke:0.5px #414141;\r\n  font-weight:1000\r\n`","export default function gatRandomColor() {\r\n  return \"#\" + ((Math.random() * 0xffffff) << 0).toString(16);\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { Pagination } from \"antd\";\r\nimport \"./MyPagination.css\";\r\n\r\nfunction itemRender(\r\n  current: number,\r\n  type: string,\r\n  originalElement: React.ReactElement<HTMLElement>\r\n) {\r\n  if (type === \"prev\") {\r\n    return (\r\n      <a>\r\n        <HistoryBtn className=\"forward\" />\r\n      </a>\r\n    );\r\n  }\r\n  if (type === \"next\") {\r\n    return (\r\n      <a>\r\n        <HistoryBtn className=\"backward\" />\r\n      </a>\r\n    );\r\n  }\r\n  return originalElement;\r\n}\r\n\r\nexport default function MyPagination(props: {\r\n  total?: number;\r\n  onChange?: (e: number) => void;\r\n}) {\r\n  const total = props.total;\r\n  return (\r\n    <Container\r\n      className=\"myPagination\"\r\n      pageSize={9}\r\n      total={total}\r\n      itemRender={itemRender}\r\n      showSizeChanger={false}\r\n      onChange={props.onChange}\r\n    />\r\n  );\r\n}\r\n\r\nconst HistoryBtn = styled.div`\r\n  height: 37.1px;\r\n  width: 119.1px;\r\n`;\r\n\r\nconst Container = styled(Pagination)`\r\n  height: 37.1px;\r\n`;\r\n","import { Avatar, Card, Empty, Popover } from \"antd\";\r\nimport {\r\n  EyeOutlined,\r\n  LikeOutlined,\r\n  StarOutlined,\r\n  SwapRightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { cardProject } from \"types/project\";\r\n\r\nimport './ProjectCards.css';\r\nimport Tag from 'components/Tag';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\nimport getRandomColor from 'utils/getRandomColor';\r\n\r\nconst ProjectCard = ({\r\n  projectProps,\r\n  onSelected,\r\n}: {\r\n  projectProps: cardProject;\r\n  onSelected?: (props: cardProject) => void;\r\n}) => {\r\n  return (\r\n    <NavLink to={`/project/show/${projectProps.id}`}>\r\n      <Card\r\n        title={`${projectProps.name}`}\r\n        extra={`ID:${projectProps.id}`}\r\n        size={\"small\"}\r\n        hoverable\r\n        onSelect={() => (alert('0'))}\r\n      >\r\n        <div className='paragraphInCard' onClick={(e) => { e.preventDefault() }}>\r\n          {projectProps.members.map((member) => (\r\n            <Popover key={member.username} content={<b>{member.username}</b>}>\r\n              <Avatar src={member.avatar} />\r\n            </Popover>\r\n          ))}\r\n        </div>\r\n        <div className='paragraphInCard'>\r\n          <b>项目周期：</b>\r\n          {projectProps.startAt}\r\n          <SwapRightOutlined />\r\n          {projectProps.endAt}\r\n        </div>\r\n        <div className='paragraphInCard'>\r\n          <b>项目简介：</b>\r\n          {projectProps.description}\r\n        </div>\r\n        <div className='paragraphInCard'>\r\n          {projectProps.tags.map((tag) => (\r\n            <Tag key={tag}>{tag}</Tag>\r\n          ))}\r\n        </div>\r\n        <div className='paragraphInCard'>\r\n          <ThreeColumns className='threeColumns' onClick={(e) => { e.preventDefault() }}>\r\n            <div className='block' >\r\n              <LikeOutlined /> {projectProps.likes}\r\n            </div>\r\n            <div className='block'>\r\n              <StarOutlined /> {projectProps.stars}\r\n            </div>\r\n            <div className='block'>\r\n              <EyeOutlined /> {projectProps.watches}\r\n            </div>\r\n          </ThreeColumns>\r\n        </div>\r\n      </Card>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\n\r\nexport const ProjectCardList = ({\r\n  projectList,\r\n}: {\r\n  projectList: cardProject[];\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n      {(projectList||[]).length === 0 ? (\r\n        <Empty\r\n          description={<EmptyText>没有数据</EmptyText>}\r\n        />\r\n      ) : (\r\n        <CardCointainer className=\"cardContainer\">\r\n          {projectList.map((item) => (\r\n            <ProjectCard key={item.id} projectProps={item} onSelected={(e) => { }} />\r\n          ))}\r\n        </CardCointainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst EmptyText = styled.span`\r\n  color: \"#A0A0A0\"\r\n`\r\n\r\nconst CardCointainer = styled.div`\r\n  height: 100%;\r\n`\r\n\r\nconst ThreeColumns = styled.div`\r\n  font-size      : 1.5rem;\r\n  .block:hover{\r\n    color: #ff0000;\r\n  }\r\n`","import { useMemo, useState } from \"react\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport SearchBar from \"components/SearchBar\";\r\nimport { useAppDispatch } from \"store/hooks\";\r\nimport { set } from \"store/features/projectListSlice\";\r\nimport { testCardInfo1, testCardInfo2 } from \"config/userCard\";\r\nimport MyPagination from \"components/MyPagination/Mypagination\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { useAppSelector } from \"store/hooks\";\r\nimport { ProjectCardList } from \"./ProjectCard\";\r\nimport { proProjectList } from \"api\";\r\n\r\nconst initialSeachInfo = { page: 0, sort: \"最近一次更新\" };\r\n\r\nconst MenuList = (props: { setKey: (e: string) => void }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setSort = (info: string) => {\r\n    props.setKey(info);\r\n\r\n    proProjectList({ ...initialSeachInfo, sort: info }).then((res) => {\r\n      console.log(res);\r\n      dispatch(set(res.projects));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu defaultSelectedKeys={[\"0\"]}>\r\n      <Menu.Item key=\"0\">\r\n        <button\r\n          onClick={() => {\r\n            setSort(\"最近一次更新\");\r\n          }}\r\n        >\r\n          最近一次更新\r\n        </button>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <button\r\n          onClick={() => {\r\n            setSort(\"项目开始时间\");\r\n          }}\r\n        >\r\n          项目开始时间\r\n        </button>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\">\r\n        <button\r\n          onClick={() => {\r\n            setSort(\"最多收藏\");\r\n          }}\r\n        >\r\n          最多收藏\r\n        </button>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"3\">\r\n        <button\r\n          onClick={() => {\r\n            setSort(\"最多点赞\");\r\n          }}\r\n        >\r\n          最多点赞\r\n        </button>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"4\">\r\n        <button\r\n          onClick={() => {\r\n            setSort(\"最多查看\");\r\n          }}\r\n        >\r\n          最多查看\r\n        </button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default function ProjectList() {\r\n  const [page, setpage] = useState<number>(0);\r\n  const [sort, setsort] = useState<string>(\"最近一次更新\");\r\n  const [search, setsearch] = useState<string>(\"\");\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useMemo(() => {\r\n    console.log(initialSeachInfo);\r\n\r\n    proProjectList(initialSeachInfo).then((res) => {\r\n      dispatch(set(res.projects));\r\n    });\r\n  }, []);\r\n\r\n  const projectList = useAppSelector((store) => store.projectList.projectList);\r\n\r\n  return (\r\n    <Container className=\"projectList\">\r\n      <div className=\"plMain\">\r\n        <PlSearchBar className=\"plSearchBar\">\r\n          <SearchBar\r\n            color=\"black\"\r\n            height={50}\r\n            width={800}\r\n            placeholder=\"请输入要搜索的项目\"\r\n            onBtnClick={(e, text?: string) => {\r\n              proProjectList({ ...initialSeachInfo, search: text }).then(\r\n                (res) => {\r\n                  dispatch(set(res.projects));\r\n                }\r\n              );\r\n            }}\r\n          />\r\n\r\n          <PlPulldown className=\"plPulldown\">\r\n            <Dropdown\r\n              overlay={<MenuList setKey={(e: string) => setsort(e)} />}\r\n              trigger={[\"click\"]}\r\n            >\r\n              <PulldownText>\r\n                <a\r\n                  className=\"ant-dropdown-link\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  {sort} <DownOutlined />\r\n                </a>\r\n              </PulldownText>\r\n            </Dropdown>\r\n          </PlPulldown>\r\n        </PlSearchBar>\r\n\r\n        <ProjectCardList projectList={projectList} />\r\n\r\n        <div>\r\n          {(projectList || []).length >= 18 && (\r\n            <MyPagination\r\n              total={270}\r\n              onChange={(e) => {\r\n                proProjectList({ ...initialSeachInfo, page: e }).then((res) => {\r\n                  dispatch(set(res.projects));\r\n                });\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 30px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst PlSearchBar = styled.div`\r\n  width: 100%;\r\n  min-width: 800px;\r\n`;\r\n\r\nconst PlPulldown = styled.div`\r\n  width: 800px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst PulldownText = styled.div`\r\n  width: 10rem;\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n`;\r\n"],"sourceRoot":""}