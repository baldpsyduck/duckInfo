{"version":3,"sources":["pages/User/Users/userCard.tsx","pages/User/Users/index.tsx"],"names":["getRenderPropsByPosition","position","color","title","UserCard","userProps","onSelected","Container","styled","Card","authority","to","username","className","size","hoverable","onSelect","icon","src","avatar","alt","officialID","href","email","UserCardList","userList","map","item","Users","userListSelector","useAppSelector","store","adminUserList","memberUserList","forEach","user","index","push","Title","level","length"],"mappings":"4OAKMA,EAA2B,SAACC,GAChC,OAAQA,GACN,KAAK,GACH,MAAO,CACLC,MAAO,UACPC,MAAO,gBAEX,KAAK,EACH,MAAO,CACLD,MAAO,UACPC,MAAO,kCAEX,KAAK,EACH,MAAO,CACLD,MAAO,UACPC,MAAO,gBAEX,QACE,MAAO,CACLD,MAAO,UACPC,MAAO,8BAKTC,EAAW,SAAC,GAMX,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,WAOMC,EAAYC,YAAOC,IAAPD,CAAH,6DACYR,EAAyBK,EAAUK,WAAWR,OAGzE,OACE,cAAC,IAAD,CAASS,GAAE,mBAAcN,EAAUO,UAAnC,SACE,eAACL,EAAD,CACEM,UAAU,WACVC,KAAM,QACNC,WAAS,EACTC,SAAU,kBAAOV,EAAaA,EAAWD,GAAa,MAJxD,UAME,cAAC,IAAD,CACES,KAAM,GACND,UAAU,aACVI,KAAM,qBAAKC,IAAKb,EAAUc,OAAQC,IAAK,iBAEzC,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6BR,EAAUO,WACvC,uBAAMC,UAAU,aAAhB,iBAAkCR,EAAUgB,iBAE9C,mBAAGC,KAAI,iBAAYjB,EAAUkB,OAA7B,SAAuClB,EAAUkB,QACjD,gCACyB,KAAtBlB,EAAUK,UAAiB,qBAAQ,eACnC,SACAV,EAAyBK,EAAUK,WAAWP,kBAQ9CqB,EAAe,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAC7B,OACE,qBAAKZ,UAAU,oBAAf,SACGY,EAASC,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAAUtB,UAAWsB,U,eCrEd,SAASC,IACtB,IAAMC,EAAmBC,aAAe,SAAAC,GAAK,OAAIA,EAAMN,YAEnDO,EAAwB,GACxBC,EAAyB,GAU7B,OARAJ,EAAiBJ,SAASS,SAAQ,SAACC,EAAYC,GACxB,KAAjBD,EAAKzB,UACPsB,EAAcK,KAAKF,GAEnBF,EAAeI,KAAKF,MAKtB,sBAAKtB,UAAU,eAAf,UACE,cAAC,IAAWyB,MAAZ,CAAkBC,MAAO,EAAzB,gCACA,qBAAK1B,UAAU,gBAAf,SAC4B,IAAzBmB,EAAcQ,QACb,mCACE,cAAC,EAAD,CAAcf,SAAUO,QAM9B,cAAC,IAAWM,MAAZ,CAAkBC,MAAO,EAAzB,0BACA,qBAAK1B,UAAU,aAAf,SAC6B,IAA1BoB,EAAeO,QACd,mCACE,cAAC,EAAD,CAAcf,SAAUQ","file":"static/js/12.75d15fdb.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Avatar, Card } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { cardUser } from 'types/user';\r\n\r\nconst getRenderPropsByPosition = (position?: number) => {\r\n  switch (position) {\r\n    case 10:\r\n      return {\r\n        color: \"#FBC400\",\r\n        title: \"主席\",\r\n      };\r\n    case 2:\r\n      return {\r\n        color: \"#00E268\",\r\n        title: \"实验室成员\",\r\n      };\r\n    case 1:\r\n      return {\r\n        color: \"#00E2E2\",\r\n        title: \"学生\",\r\n      };\r\n    default:\r\n      return {\r\n        color: \"#C0C0C0\",\r\n        title: \"编外人员\",\r\n      };\r\n  }\r\n};\r\n\r\nconst UserCard = ({\r\n  userProps,\r\n  onSelected,\r\n}: {\r\n  userProps: cardUser;\r\n  onSelected?: (props: cardUser) => void;\r\n}) => {\r\n\r\n\r\n  const Container = styled(Card)`\r\n    border-left: 8px solid ${getRenderPropsByPosition(userProps.authority).color}\r\n  `\r\n\r\n  return (\r\n    <NavLink to={`/user/me/${userProps.username}`}>\r\n      <Container\r\n        className=\"userCard\"\r\n        size={\"small\"}\r\n        hoverable\r\n        onSelect={() => (onSelected ? onSelected(userProps) : null)}\r\n      >\r\n        <Avatar\r\n          size={64}\r\n          className=\"userAvatar\"\r\n          icon={<img src={userProps.avatar} alt={\"UserAvatar\"} />}\r\n        />\r\n        <div className=\"userInfo\">\r\n          <div className=\"titleContent\">\r\n            <span className=\"titleLeft\">{userProps.username}</span>\r\n            <span className=\"titleRight\"> - #{userProps.officialID}</span>\r\n          </div>\r\n          <a href={`mailto:${userProps.email}`}>{userProps.email}</a>\r\n          <div>\r\n            {userProps.authority===10 ? \"行政组\" : \"成员\"}\r\n            {\" · \"}\r\n            {getRenderPropsByPosition(userProps.authority).title}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport const UserCardList = ({ userList }: { userList: cardUser[] }) => {\r\n  return (\r\n    <div className=\"cardListContainer\">\r\n      {userList.map((item) => (\r\n        <UserCard userProps={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import { Typography } from \"antd\";\r\nimport styled from \"@emotion/styled\";\r\nimport { UserCardList } from \"./userCard\";\r\nimport { user } from \"types/user\";\r\nimport { useAppSelector } from 'store/hooks';\r\nimport \"./users.css\"\r\nimport MoveDiv from 'components/MoveDiv';\r\n\r\nexport default function Users() {\r\n  const userListSelector = useAppSelector(store => store.userList);\r\n\r\n  let adminUserList: user[] = [];;\r\n  let memberUserList: user[] = [];\r\n\r\n  userListSelector.userList.forEach((user: user, index: any) => {\r\n    if (user.authority===10) {\r\n      adminUserList.push(user);\r\n    } else {\r\n      memberUserList.push(user);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"userCardList\">\r\n      <Typography.Title level={3}>行政组</Typography.Title>\r\n      <div className=\"administrator\">\r\n        {adminUserList.length !== 0 &&\r\n          <>\r\n            <UserCardList userList={adminUserList} />\r\n\r\n          </>\r\n        }\r\n      </div>\r\n\r\n      <Typography.Title level={3}>成员</Typography.Title>\r\n      <div className=\"userMember\">\r\n        {memberUserList.length !== 0 &&\r\n          <>\r\n            <UserCardList userList={memberUserList} />\r\n          </>\r\n        }\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n};\r\n"],"sourceRoot":""}