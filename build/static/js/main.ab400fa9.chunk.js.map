{"version":3,"sources":["utils/http.tsx","api/index.ts","store/features/projectSlice.tsx","pages/Loading/index.tsx","components/SearchBar/index.tsx","components/MoveDiv/index.tsx","store/features/projectListSlice.tsx","store/features/userSlice.tsx","store/hooks.tsx","components/TopBar/TopBarComponents/Menu.tsx","components/TopBar/TopBarComponents/Title.tsx","components/TopBar/Left.tsx","store/features/meSlice.tsx","config/user.ts","components/TopBar/TopBarComponents/Logout.tsx","components/TopBar/TopBarComponents/Message.tsx","components/TopBar/TopBarComponents/More.tsx","store/features/loginSlice.tsx","components/TopBar/TopBarComponents/UserPullDown.tsx","components/TopBar/TopBarComponents/User.tsx","components/TopBar/Right.tsx","components/TopBar/index.tsx","components/Login/index.tsx","pages/Register/index.tsx","pages/Home/index.tsx","store/features/locSlice.tsx","components/LeftBar/index.tsx","App.tsx","store/features/userListSlice.tsx","store/index.ts","serviceWorker.js","index.jsx","store/features/moveSlice.tsx"],"names":["apiUrl","process","fetchHttp","endpoint","a","data","cookie","headers","customConfig","config","method","credentials","mode","toUpperCase","qs","stringify","body","JSON","window","fetch","then","response","json","ok","Promise","reject","userRegist","info","userLogin","props","userGetUser","proRegist","proProjectList","projectSlice","createSlice","name","initialState","id","description","likes","dislikes","watches","stars","startAt","endAt","members","role","username","projectTree","tags","reducers","setProject","state","action","payload","comments","golry","links","setMem","pushTree","push","delTreeNode","splice","setTree","title","date","num","clearTree","pushChild","seq","children","content","setKey","key","delChild","setChildKey","setChild","pushTags","delTags","indexOf","setTags","actions","Loading","tip","Inner","styled","div","SearchBar","width","height","borderColor","btnColor","backgroundColor","color","placeholder","className","onBtnClick","input","useRef","SearchInput","Input","SearchBtn","button","SearchIcon","SearchOutlined","ref","onClick","e","current","value","MoveDiv","useState","firstTime","setfirstTime","thisComponent","setthisComponent","divRef","myStyle","style","bubbles","cilentC","useAppSelector","store","move","clientC","initalC","dispatch","useAppDispatch","onMouseDown","target","setSelected","setInitalC","clientX","parseInt","offsetLeft","clientY","offsetTop","setClientC","left","top","select","onMouseUp","position","zIndex","projectListSlice","projectList","set","append","clear","meSlice","SESSIONID","authority","email","updateUser","updateID","updateUsername","useDispatch","useSelector","Menu","MenuInner","activeClassName","to","NavLink","Title","Container","Logo","CutOff","TitleText","span","Left","updateMe","blankUser","Logout","LogoutIcon","LogoutOutlined","Message","placement","trigger","arrowPointAtCenter","count","MessageIcon","BellOutlined","More","MoreIcon","PlusOutlined","loginSlice","chooseLogin","changeLogin","UserPullDown","me","PulldownStyle","Link","User","HeadPortrait","icon","UserIcon","UserOutlined","Avatar","Right","user","TopBar","Login","error","seterror","LoginOuter","CloseOutlined","initialValues","remember","onFinish","values","res","catch","err","message","Item","rules","required","prefix","LockOutlined","type","ErrorSpan","valuePropName","noStyle","htmlType","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","offset","Register","success","setsuccess","history","useHistory","Form","useForm","form","status","subTitle","onBack","goBack","confirm","agreement","studentId","stuID","setTimeout","replace","scrollToFirstError","label","whitespace","tooltip","validator","_","length","Error","resolve","hasFeedback","Password","dependencies","getFieldValue","ErrorText","Home","location","createBrowserHistory","pathname","locSlice","updateLoc","LeftBar","loc","userName","LeftMenu","defaultSelectedKeys","ProjectInner","Project","lazy","App","listen","route","login","selected","onMouseMove","mouseMove","fallback","path","component","userListSlice","userList","configureStore","reducer","meReducer","loginReducer","locReducer","moveReducer","projectListReducer","userListReducer","project","projectReducer","userReducer","Boolean","hostname","match","ReactDOM","render","locale","zhCN","document","getElementById","navigator","serviceWorker","ready","registration","unregister","moveSlice"],"mappings":"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","file":"static/js/main.ab400fa9.chunk.js","sourcesContent":["import qs from \"qs\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport interface httpConfig extends RequestInit {\r\n  cookie?: string;\r\n  data?: object;\r\n}\r\n\r\nexport const fetchHttp = async (\r\n  endpoint: string,\r\n  { data, cookie, headers, ...customConfig }: httpConfig = {}\r\n) => {\r\n\r\n  const config: RequestInit = {\r\n    // use GET as default method\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": data ? \"application/json\" : \"\",\r\n      'Access-Control-Allow-Origin':'*'\r\n    },\r\n    credentials: 'include',\r\n    mode:\"cors\",\r\n    ...customConfig,\r\n  };\r\n\r\n  if (config.method?.toUpperCase() === \"GET\") {\r\n    endpoint += `?${qs.stringify(data)}`;\r\n  } else {\r\n    config.body = JSON.stringify(data || {}); \r\n  }\r\n\r\n  return window.fetch(`${apiUrl}/${endpoint}`, config).then((response) => {\r\n    const data = response.json();\r\n    if (response.ok) {\r\n      return data;\r\n    } else {\r\n      return Promise.reject(data);\r\n    }\r\n  });\r\n};\r\n","import { fetchHttp } from \"utils/http\";\r\nimport { user } from \"types/user\";\r\nimport { project } from \"types/project\";\r\nimport cookie from \"react-cookies\";\r\nimport Axios from \"axios\";\r\n\r\nexport const userRegist = (info: user) => {\r\n  return fetchHttp(\"api/user/register\", {\r\n    method: \"POST\",\r\n    data: info,\r\n  });\r\n};\r\n\r\nexport const userLogin = (props: {\r\n  username: string;\r\n  password: string;\r\n  remember: boolean;\r\n}) => {\r\n  return fetchHttp(\"api/user/login\", {\r\n    method: \"POST\",\r\n    data: props,\r\n  });\r\n};\r\n\r\nexport const userGetUser = (props?: { who: string }) => {\r\n  return fetchHttp(\"api/user/getUser\", {\r\n    data: props,\r\n  });\r\n};\r\n\r\nexport const userLogout = () => {\r\n  return fetchHttp(\"api/user/logout\", { method: \"POST\" });\r\n};\r\n\r\nexport const proRegist = (props: project) => {\r\n  return fetchHttp(\"api/project/register\", {\r\n    method: \"POST\",\r\n    data: props,\r\n  });\r\n};\r\n\r\nexport const proProjectList = (props: {\r\n  page: number;\r\n  sort: string;\r\n  search?: string;\r\n}) => {\r\n  return fetchHttp(\"api/project/list\", { data: props });\r\n};\r\n\r\nexport const proGetProject = (props: { id: string }) => {\r\n  return fetchHttp(\"api/project/info\", { data: props });\r\n};\r\n\r\nexport const proSetInfo = (props: project) => {\r\n  return fetchHttp(\"api/project/setInfo\", {\r\n    method: \"POST\",\r\n    data: props,\r\n  });\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"..\";\r\nimport { members } from \"types/project\";\r\nimport { branch } from \"types/project\";\r\nimport { project as projectProps } from \"types/project\";\r\n\r\ninterface Project extends projectProps {}\r\n\r\nconst initialState: Project = {\r\n  id: \"\",\r\n  name: \"\",\r\n  description: \"\",\r\n  likes: 0,\r\n  dislikes: 0,\r\n  watches: 0,\r\n  stars: 0,\r\n  startAt: \"0\",\r\n  endAt: \"0\",\r\n  members: [{ role: \"\", username: \"\" }],\r\n  projectTree: [],\r\n  tags: [],\r\n};\r\n\r\nconst projectSlice = createSlice({\r\n  name: \"project\",\r\n  initialState,\r\n  reducers: {\r\n    setProject: (state, action: PayloadAction<projectProps>) => {\r\n      state.id = action.payload.id;\r\n      state.comments = action.payload.comments;\r\n      state.description = action.payload.description;\r\n      state.dislikes = action.payload.dislikes;\r\n      state.endAt = action.payload.endAt;\r\n      state.golry = action.payload.golry;\r\n      state.likes = action.payload.likes;\r\n      state.links = action.payload.links;\r\n      state.members = action.payload.members;\r\n      state.name = action.payload.name;\r\n      state.projectTree = action.payload.projectTree;\r\n      state.stars = action.payload.stars;\r\n      state.startAt = action.payload.startAt;\r\n      state.tags = action.payload.tags;\r\n      state.watches = action.payload.watches;\r\n    },\r\n\r\n    setMem: (state, action: PayloadAction<members>) => {\r\n      state.members = action.payload;\r\n    },\r\n\r\n    pushTree: (state, action: PayloadAction<branch>) => {\r\n      state.projectTree.push(action.payload);\r\n    },\r\n\r\n    delTreeNode: (state, action: PayloadAction<number>) => {\r\n      state.projectTree.splice(action.payload, 1);\r\n    },\r\n\r\n    setTree: (\r\n      state,\r\n      action: PayloadAction<{ title?: string; date?: string; num: number }>\r\n    ) => {\r\n      const { title, date, num } = action.payload;\r\n      date && (state.projectTree[num].date = date);\r\n      title && (state.projectTree[num].title = title);\r\n    },\r\n\r\n    clearTree: (state) => {\r\n      state.projectTree = [];\r\n    },\r\n\r\n    pushChild: (\r\n      state,\r\n      action: PayloadAction<{\r\n        seq: number;\r\n        content: { title: string; key: string; order?: number; children: [] };\r\n      }>\r\n    ) => {\r\n      state.projectTree[action.payload.seq].children?.push(\r\n        action.payload.content\r\n      );\r\n    },\r\n\r\n    setKey: (state, action: PayloadAction<number>) => {\r\n      state.projectTree[action.payload].key = `${action.payload}`;\r\n    },\r\n\r\n    delChild: (state, action: PayloadAction<Array<number>>) => {\r\n      const num = action.payload;\r\n      state.projectTree[num[0]].children.splice(num[1], 1);\r\n    },\r\n\r\n    setChildKey: (state, action: PayloadAction<Array<number>>) => {\r\n      const num = action.payload;\r\n      if (state.projectTree[num[0]]?.children[num[1]])\r\n        state.projectTree[num[0]].children[num[1]].key = `${num[0]}-${num[1]}`;\r\n    },\r\n\r\n    setChild: (\r\n      state,\r\n      action: PayloadAction<{ num: Array<number>; content: string }>\r\n    ) => {\r\n      const { num, content } = action.payload;\r\n      content &&\r\n        state.projectTree[num[0]] &&\r\n        (state.projectTree[num[0]].children[num[1]].title = content);\r\n    },\r\n\r\n    pushTags: (state, action: PayloadAction<string>) => {\r\n      state.tags.push(action.payload);\r\n    },\r\n\r\n    delTags: (state, action: PayloadAction<string>) => {\r\n      state.tags.splice(state.tags.indexOf(action.payload), 1);\r\n    },\r\n\r\n    setTags: (state, action: PayloadAction<string[]>) => {\r\n      state.tags = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMem,\r\n  pushTree,\r\n  clearTree,\r\n  delTreeNode,\r\n  pushChild,\r\n  setKey,\r\n  delChild,\r\n  setChildKey,\r\n  setTree,\r\n  setChild,\r\n  pushTags,\r\n  delTags,\r\n  setTags,\r\n} = projectSlice.actions;\r\nexport const project = (state: RootState) => state.project;\r\nexport default projectSlice.reducer;\r\n","import styled from '@emotion/styled';\r\nimport {Spin} from 'antd';\r\n\r\nexport default function Loading() {\r\n    return (\r\n            <Spin tip=\"加载中\">\r\n                <Inner/>\r\n            </Spin >\r\n    )\r\n}\r\nconst Inner=styled.div`\r\n    height: 100vh;\r\n    width: 100%;\r\n`","import { SearchOutlined } from \"@ant-design/icons\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Input } from \"antd\";\r\nimport \"./SearchBar.css\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface searchBarProps {\r\n  width?: number;\r\n  height?: number;\r\n  borderColor?: string;\r\n  btnColor?: string;\r\n  backgroundColor?: string;\r\n  color?: string;\r\n  placeholder?: string; \r\n  className?: string;\r\n  onBtnClick?: (e?: any, text?:string) => void;\r\n}\r\n\r\nexport default function SearchBar(props: searchBarProps) {\r\n\r\n  const width = props.width || 220;\r\n  const height = props.height || 35;\r\n  const borderColor = props.borderColor || \"#d5d6d7\";\r\n  const btnColor = props.btnColor || borderColor;\r\n  const backgroundColor = props.backgroundColor || \"white\";\r\n  const color = props.color || \"black\";\r\n  const placeholder = props.placeholder || \"\";\r\n  const className = props.className || \"\";\r\n  const { onBtnClick } = props;\r\n\r\n  const input = useRef<Input>(null);\r\n\r\n  const SearchBar = styled.div`\r\n    width: ${width}px;\r\n    border: 1px solid ${borderColor};\r\n  `;\r\n\r\n  const SearchInput = styled(Input)`\r\n    height: ${height}px;\r\n    width: ${width - height}px;\r\n    background-color: ${backgroundColor};\r\n    font-size: ${height * 0.4}px;\r\n    outline: none;\r\n    border: 0;\r\n    color: ${color};\r\n    border-radius: 0px;\r\n  `;\r\n\r\n  const SearchBtn = styled.button`\r\n    height: ${height}px;\r\n    width: ${height}px;\r\n    background-color: ${backgroundColor};\r\n  `;\r\n \r\n  const SearchIcon = styled(SearchOutlined)`\r\n    color: ${btnColor};\r\n    height: ${height}px;\r\n    width: ${height}px;\r\n    font-size: ${height * 0.4}px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  `;\r\n\r\n  return (\r\n    <SearchBar className={`searchBar ${className}`}>\r\n      <SearchInput ref={input} placeholder={placeholder} />\r\n      <SearchBtn\r\n        className=\"searchBtn\"\r\n        onClick={(e) => {\r\n          onBtnClick && onBtnClick(e,input.current?.state.value);\r\n        }}\r\n      >\r\n        <SearchIcon />\r\n      </SearchBtn>\r\n    </SearchBar>\r\n  );\r\n}\r\n","import { ReactNode, useRef, useState } from \"react\"\r\n\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\nimport { setInitalC, setSelected, setClientC } from 'store/features/moveSlice';\r\n\r\ninterface MoveDivProps extends React.HTMLProps<HTMLDivElement> {\r\n    children: ReactNode\r\n    bubbles?: boolean\r\n}\r\n\r\n\r\nexport default function MoveDiv(props: MoveDivProps) {\r\n\r\n    const [firstTime, setfirstTime] = useState<boolean>(true)\r\n    const [thisComponent, setthisComponent] = useState<boolean>(false)\r\n    const divRef = useRef<HTMLDivElement>(null)\r\n\r\n    const myStyle = props.style\r\n    const children = props.children;\r\n    const bubbles = props.bubbles\r\n\r\n    const cilentC = useAppSelector(store => store.move.clientC)\r\n    const initalC = useAppSelector(store => store.move.initalC)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const select = (e: any) => {\r\n        if (e.target.className === divRef.current?.className || bubbles) {\r\n            dispatch(setSelected(true))\r\n            setthisComponent(true)\r\n            if (firstTime) {\r\n                dispatch(setInitalC([e.clientX - parseInt(divRef.current?.offsetLeft + \"\"), e.clientY - parseInt(divRef.current?.offsetTop + \"\")]))\r\n                dispatch(setClientC([e.clientX, e.clientY]))\r\n                setfirstTime(false)\r\n            } else {\r\n                dispatch(setInitalC([e.clientX - parseInt(divRef.current?.style.left + \"\"), e.clientY - parseInt(divRef.current?.style.top + \"\")]))\r\n                dispatch(setClientC([e.clientX, e.clientY]))\r\n            }\r\n        }\r\n    }\r\n\r\n    const unselect = () => {\r\n        setthisComponent(false)\r\n        dispatch(setSelected(false))\r\n    }\r\n\r\n    return (\r\n        <div\r\n\r\n            {...props}\r\n\r\n            ref={divRef}\r\n\r\n            onMouseDown={(e) => {\r\n                select(e);\r\n            }}\r\n\r\n            onMouseUp={() => unselect()}\r\n\r\n            className={`myMoveDiv ${props.className}`}\r\n\r\n            style={\r\n                thisComponent ?\r\n                    { ...myStyle, position: \"absolute\", left: cilentC[0] - initalC[0] + 'px', top: cilentC[1] - initalC[1] + 'px', zIndex: 999999999 }\r\n                    : {  ...myStyle, position: \"absolute\", left: divRef.current?.style.left, top: divRef.current?.style.top }}\r\n\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from '..';\r\nimport { cardProject } from 'types/project';\r\n\r\ninterface State {\r\n    projectList: cardProject[];\r\n}\r\n\r\nconst initialState: State = {\r\n    projectList: [],\r\n};\r\n\r\nexport const projectListSlice = createSlice({\r\n    name: \"projectListSlice\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        set(state, action) {\r\n            state.projectList = action.payload;\r\n        },\r\n        append(state, action) {\r\n            state.projectList = [...state.projectList, action.payload];\r\n        },\r\n        clear(state) {\r\n            state.projectList = [];\r\n        },\r\n    },\r\n});\r\n\r\nexport const { set, append, clear } = projectListSlice.actions\r\nexport const projectList = (state: RootState) => state.projectList\r\nexport default projectListSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"..\";\r\nimport { user as userType } from \"types/user\";\r\n\r\nconst initialState: { data: userType } = {\r\n  data: {\r\n    SESSIONID: \"\",\r\n    username: \"\",\r\n    authority: 0,\r\n    email: \"\",\r\n  },\r\n};\r\n\r\nconst meSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    updateUser: (state, action: PayloadAction<userType>) => {\r\n      state.data = action.payload;\r\n    },\r\n    updateID: (state, action: PayloadAction<string>) => {\r\n      state.data.SESSIONID = action.payload;\r\n    },\r\n    updateUsername: (state, action: PayloadAction<string>) => {\r\n      state.data.username = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updateUser, updateID, updateUsername } = meSlice.actions;\r\nexport const user = (state: RootState) => state.user;\r\nexport default meSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { RootState, AppDispatch } from './';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import styled from \"@emotion/styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Menu() {\r\n    return (\r\n        <div className=\"menu\">\r\n\r\n            <MenuInner activeClassName=\"active\" className=\"menuInner\" to=\"/home\" >\r\n                首页\r\n            </MenuInner>\r\n            <MenuInner activeClassName=\"active\" className=\"menuInner\" to=\"/project\">\r\n                项目\r\n            </MenuInner>\r\n\r\n            <MenuInner activeClassName=\"active\" className=\"menuInner\" to=\"/user\">\r\n                用户\r\n            </MenuInner>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nconst MenuInner = styled(NavLink)`\r\n    height         : 100%;\r\n    width          : 5.5rem;\r\n    font-family    : STZhongsong;\r\n    font-size      : 1.6rem;\r\n    color          : #FFFFFF;\r\n    justify-content: center;\r\n`","import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Title() {\r\n    return (\r\n        <Container className=\"titleOuter\">\r\n            <Link to=\"/home\">\r\n                <Logo className=\"logo\" />\r\n            </Link>\r\n            <CutOff />\r\n            <Link to=\"/home\">\r\n                <TitleText>兴趣开放实验室·项目官网</TitleText>\r\n            </Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width:24.5rem\r\n`\r\n\r\nconst Logo = styled.div`\r\n    width:3.8rem;\r\n    height:3.8rem;\r\n`\r\n\r\nconst CutOff = styled.div`\r\n    width : 0;\r\n    height: 4rem;\r\n    border: 1px solid white;\r\n`\r\n\r\nconst TitleText=styled.span`\r\n    font-family: STZhongsong;\r\n    font-style : normal;\r\n    font-weight: normal;\r\n    font-size  : 1.5rem;\r\n    color      : #FFFFFF;\r\n`","import Menu from \"./TopBarComponents/Menu\";\r\nimport SearchBar from \"components/SearchBar\";\r\nimport Title from \"./TopBarComponents/Title\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport default function Left() {\r\n    return (\r\n        <Container className=\"left\">\r\n            <Title/>\r\n            <Menu/>\r\n            <SearchBar borderColor=\"white\" backgroundColor=\"transparent\" color=\"white\"/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container=styled.div`\r\n    width:70rem;\r\n`","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"..\";\r\nimport { user as userType } from \"types/user\";\r\n\r\nconst initialState: { data: userType } = {\r\n  data: {\r\n    SESSIONID: \"\",\r\n    username: \"\",\r\n    authority: 0,\r\n    email: \"\",\r\n  },\r\n};\r\n\r\nconst meSlice = createSlice({\r\n  name: \"me\",\r\n  initialState,\r\n  reducers: {\r\n    updateMe: (state, action: PayloadAction<userType>) => {\r\n      state.data = action.payload; \r\n    },\r\n    updateID: (state, action: PayloadAction<string>) => {\r\n      state.data.SESSIONID = action.payload;\r\n    },\r\n    updateUsername: (state, action: PayloadAction<string>) => {\r\n      state.data.username = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updateMe, updateID, updateUsername } = meSlice.actions;\r\nexport const me = (state: RootState) => state.me;\r\nexport default meSlice.reducer;\r\n","import { user } from \"types/user\";\r\n\r\nexport const templateUser: user = {\r\n  username: \"张三\",\r\n  email: \"zhangsan@mail.com\",\r\n  officialID: \"OL-233\",\r\n  avatar: \"avatar/template_avatar.png\",\r\n  description:\r\n    \"思而不行假道理，行而不思空忙碌。每个人心中都有一个火种，不要听任它熄灭，要找到它，点燃它。\",\r\n  SESSIONID: \"51sa65\",\r\n  authority: 0,\r\n};\r\n\r\nexport const blankUser: user = {\r\n  username: \"\",\r\n  email: \"\",\r\n  SESSIONID: \"\",\r\n  authority: 0,\r\n};","import { LogoutOutlined } from '@ant-design/icons';\r\nimport { useAppDispatch } from 'store/hooks';\r\nimport { updateMe } from 'store/features/meSlice';\r\nimport styled from '@emotion/styled';\r\nimport {blankUser} from 'config/user';\r\nimport {userLogout} from 'api';\r\n\r\n\r\nexport default function Logout() {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const logOut = () => {\r\n        dispatch(updateMe(blankUser))\r\n    }\r\n\r\n    return (\r\n        <button className='logout' onClick={logOut}>\r\n            <Container className='logout'>\r\n                <LogoutIcon />\r\n                <span>\r\n                    登出\r\n                </span>\r\n            </Container>\r\n        </button>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width:5.8rem;\r\n    font-family: STZhongsong;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 1.7rem;\r\n    color: #FFFFFF;\r\n`\r\n\r\nconst LogoutIcon = styled(LogoutOutlined)`\r\n    font-size:1.7rem;\r\n    color:white;    \r\n`\r\n","import { Badge } from 'antd'\r\nimport { BellOutlined } from '@ant-design/icons';\r\nimport { Popover } from 'antd';\r\nimport styled from '@emotion/styled';\r\n\r\nexport default function Message() {\r\n    return (\r\n        <div className=\"message\">\r\n            <Popover placement=\"topLeft\" trigger=\"click\" arrowPointAtCenter>\r\n                <button>\r\n                    <Badge count={1}>\r\n                        <MessageIcon />\r\n                    </Badge>\r\n                </button>\r\n            </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MessageIcon = styled(BellOutlined)`\r\n    font-size:2.3rem;\r\n    color:white;\r\n`","import { PlusOutlined } from '@ant-design/icons';\r\nimport styled from '@emotion/styled';\r\nimport { Popover } from 'antd';\r\n\r\nexport default function More() {\r\n    return (\r\n        <button >\r\n            <div className='more'>\r\n                <Popover placement=\"topLeft\" trigger=\"click\" arrowPointAtCenter>\r\n                    <MoreIcon/>\r\n                </Popover>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\nconst MoreIcon=styled(PlusOutlined)`\r\n    font-size:2rem;\r\n    color: white;\r\n`","import {createSlice,PayloadAction} from '@reduxjs/toolkit';\r\nimport {RootState} from '..';\r\n\r\ninterface LoginSlice{\r\n    chooseLogin: boolean;\r\n}\r\n\r\nconst initialState:LoginSlice={\r\n    chooseLogin:false,\r\n}\r\n\r\nconst loginSlice=createSlice({\r\n    name: 'login',\r\n    initialState,\r\n    reducers:{\r\n        changeLogin:(state,action:PayloadAction<boolean>)=>{\r\n            state.chooseLogin=action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const{changeLogin}=loginSlice.actions\r\nexport const login=(state:RootState)=>state.login\r\nexport default loginSlice.reducer","import { useAppDispatch, useAppSelector } from \"store/hooks\";\r\nimport { changeLogin } from \"store/features/loginSlice\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Link} from \"react-router-dom\";\r\n\r\nexport default function UserPullDown() {\r\n  const dispatch = useAppDispatch();\r\n  const me = useAppSelector((store) => store.me.data);\r\n\r\n  let click = () => {\r\n    dispatch(changeLogin(true));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {me.username ? (\r\n        <PulldownStyle className=\"menuInner\" to={`/user/me/${me.username}`}>\r\n          个人中心\r\n        </PulldownStyle>\r\n      ) : (\r\n        <button onClick={click}>请登录</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PulldownStyle=styled(Link)`\r\n  color: black;\r\n`","import { UserOutlined } from '@ant-design/icons';\r\nimport styled from '@emotion/styled';\r\nimport { Avatar } from 'antd';\r\nimport { Popover } from 'antd';\r\nimport UserPullDown from './UserPullDown';\r\n\r\nexport default function User() {\r\n    return (\r\n        <div className='user'>\r\n            <Popover placement=\"topLeft\" trigger=\"click\" arrowPointAtCenter content={<UserPullDown />}>\r\n                <button>\r\n                    <HeadPortrait className='headPortrait' icon={<UserIcon/>} />\r\n                </button>\r\n            </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserIcon = styled(UserOutlined)`\r\n    font-size:2.8rem;\r\n    color:white;\r\n`\r\n\r\nconst HeadPortrait=styled(Avatar)`\r\n    width           : 2.8rem;\r\n    height          : 2.8rem;\r\n    border-radius   : 50%;\r\n    overflow        : hidden;\r\n    background-color: transparent;\r\n`","import styled from '@emotion/styled';\r\nimport { useAppSelector } from 'store/hooks';\r\nimport Logout from './TopBarComponents/Logout';\r\nimport Message from './TopBarComponents/Message';\r\nimport More from './TopBarComponents/More';\r\nimport User from './TopBarComponents/User';\r\n\r\nexport default function Right() {\r\n\r\n    const user = useAppSelector(store => store.me.data)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                user.username ?\r\n                    <Container className=\"right\">\r\n                        <Message />\r\n                        <More />\r\n                        <User />\r\n                        <Logout />\r\n                    </Container>\r\n                    :\r\n                    <div className=\"rightUnknown\">\r\n                        <User />\r\n                    </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Container=styled.div`\r\n    width:18rem;\r\n`","import styled from \"@emotion/styled\";\r\nimport Left from \"./Left\";\r\nimport Right from \"./Right\";\r\nimport \"./TopBar.css\"\r\nexport default function TopBar() {\r\n    return (\r\n        <Container className=\"topBarOuter\">\r\n            <Left />\r\n            <Right />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    min-width:80rem;\r\n`","import { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined, CloseOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MoveDiv from \"components/MoveDiv\";\r\n\r\nimport { useAppDispatch } from \"store/hooks\";\r\nimport { updateMe } from \"store/features/meSlice\";\r\nimport { changeLogin } from \"store/features/loginSlice\";\r\nimport \"./Login.css\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport cookie from 'react-cookies'\r\nimport { userLogin } from \"api\";\r\n\r\nexport default function Login() {\r\n  const [error, seterror] = useState(\"\");\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onFinish = (values: any) => {\r\n    userLogin(values)\r\n      .then((e) => {\r\n        const res=e.data;\r\n        dispatch(updateMe(res));\r\n        dispatch(changeLogin(false));\r\n      })\r\n      .catch((err) => seterror(err.message));\r\n  };\r\n\r\n  return (\r\n    <LoginOuter className=\"loginOuter loginContainer\" bubbles={false}>\r\n      <button className=\"close\" onClick={() => dispatch(changeLogin(false))}>\r\n        <CloseOutlined />\r\n      </button>\r\n\r\n      <div className=\"form\">\r\n        <Logo className=\"logo\" />\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"请输入用户名！\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"请输入密码！\" }]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n          {error && <ErrorSpan>{error}</ErrorSpan>}\r\n          <Form.Item>\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n              <Checkbox>记住我</Checkbox>\r\n            </Form.Item>\r\n            <Link className=\"login-form-forgot\" to=\"/home\">\r\n              忘记密码？\r\n            </Link>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              登录\r\n            </Button>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Link className=\"login-form-forgot\" to=\"/register\">\r\n              <span onClick={() => dispatch(changeLogin(false))}>\r\n                立即注册！\r\n              </span>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </LoginOuter>\r\n  );\r\n}\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: \"red\";\r\n`;\r\n\r\nconst LoginOuter = styled(MoveDiv)`\r\n  height: 395.5px;\r\n  width: 264px;\r\n  border: 1px solid #fff;\r\n  background: white;\r\n  box-shadow: 0px 0px 50px rgba(192, 192, 192, 0.3);\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  width: 84px;\r\n  height: 84px;\r\n`;\r\n","import { Form, Input, Checkbox, Button, PageHeader, Result } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { useAppDispatch } from \"store/hooks\";\r\nimport { updateMe } from \"store/features/meSlice\";\r\nimport \"./Register.css\";\r\nimport { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { userRegist } from \"api\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Register() {\r\n  const [error, seterror] = useState<string>(\"\");\r\n  const [success, setsuccess] = useState<boolean>(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onFinish = (values: any) => {\r\n    const { confirm, agreement, studentId, ...data } = values;\r\n\r\n    const stuID = studentId || \"\";\r\n\r\n    const info={ ...data, studentId: stuID };\r\n\r\n    userRegist(info)\r\n      .then((res) => {\r\n        dispatch(updateMe(info));\r\n        setsuccess(true);\r\n        setTimeout(() => {\r\n          history.replace(`/user/me/${values.username}`)\r\n        }, 3000);\r\n      })\r\n      .catch((err) => seterror(err.message));\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  return (\r\n    <Container className=\"registerOuter\">\r\n      {success ? (\r\n        <Result status=\"success\" title=\"注册成功!\" subTitle=\"3秒后自动跳转\" />\r\n      ) : (\r\n        <>\r\n          <div className=\"header\">\r\n            <PageHeader\r\n              className=\"site-page-header\"\r\n              onBack={() => history.goBack()}\r\n              title=\" \"\r\n            />\r\n          </div>\r\n\r\n          <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n            className=\"formOuter\"\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              label=\"用户名\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入你的用户名！\",\r\n                  whitespace: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"realname\"\r\n              label=\"真实姓名\"\r\n              tooltip=\"请输入真实姓名以方便我们的管理\"\r\n              rules={[{ required: true, message: \"请输入你的真实姓名！\" }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"studentId\"\r\n              label=\"学工号\"\r\n              tooltip=\"请输入学工号以方便我们的管理\"\r\n              rules={[{ required: true, message: \"请输入你的学工号！\" }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"邮箱\"\r\n              rules={[\r\n                {\r\n                  type: \"email\",\r\n                  message: \"邮箱格式不正确！\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"contactDetail\"\r\n              label=\"联系方式\"\r\n              tooltip=\"请输入你的联系方式（QQ、微信、电话）以便其他用户可以联系到你\"\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              label=\"密码\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入密码！\",\r\n                },\r\n                () => ({\r\n                  validator(_, value) {\r\n                    if (value.length < 5 || value.length > 32) {\r\n                      return Promise.reject(\r\n                        new Error(\"密码长度需保持在5~32之间\")\r\n                      );\r\n                    }\r\n                    return Promise.resolve();\r\n                  },\r\n                }),\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              label=\"确认密码\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请确认你的密码！\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(new Error(\"两次密码不同！\"));\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item\r\n              name=\"agreement\"\r\n              valuePropName=\"checked\"\r\n              rules={[\r\n                {\r\n                  validator: (_, value) =>\r\n                    value\r\n                      ? Promise.resolve()\r\n                      : Promise.reject(\r\n                          new Error(\"请阅读兴趣开放实验室用户协议\")\r\n                        ),\r\n                },\r\n              ]}\r\n              {...tailFormItemLayout}\r\n            >\r\n              <Checkbox>\r\n                我已阅读并接受 《\r\n                <a href=\"localhost:3000\">兴趣开放实验室用户协议</a>》\r\n              </Checkbox>\r\n            </Form.Item> */}\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                注册\r\n              </Button>\r\n              {error && <ErrorText>{error}</ErrorText>}\r\n            </Form.Item>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst ErrorText = styled.span`\r\n  color: red;\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import styled from \"@emotion/styled\"\r\nimport ProjectTree from 'pages/Project/ProjectShow/PSMain/ProjectTree';\r\nimport \"./Home.css\"\r\n\r\nexport default function Home() {\r\n    return (\r\n        <Container className=\"home\">\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    height:100%;\r\n`","import {createSlice,PayloadAction} from '@reduxjs/toolkit';\r\nimport {RootState} from '..';\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history=createBrowserHistory();\r\n\r\ninterface LocSlice{\r\n    location: any;\r\n}\r\n\r\nconst initialState:LocSlice={\r\n    location:history.location.pathname,\r\n}\r\n\r\nconst locSlice=createSlice({\r\n    name: 'location',\r\n    initialState,\r\n    reducers:{\r\n        updateLoc:(state,action:PayloadAction<string>)=>{\r\n            state.location=action.payload;\r\n        }\r\n    },\r\n})\r\n\r\nexport const{updateLoc}=locSlice.actions\r\nexport const loc=(state:RootState)=>state.loc\r\nexport default locSlice.reducer","import styled from \"@emotion/styled\";\r\nimport { useAppSelector } from 'store/hooks';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Menu } from 'antd';\r\n\r\n\r\nimport './LeftBar.css';\r\n\r\nexport default function LeftBar() {\r\n\r\n  const loc = useAppSelector(store => store.loc)\r\n  const userName = useAppSelector(store => store.me.data.username)\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (loc.location === \"/project/list\" && userName) &&\r\n        <Container className=\"leftBar\">\r\n          <LeftMenu\r\n            defaultSelectedKeys={['2']}\r\n            mode=\"inline\"\r\n          >\r\n            <Menu.Item key=\"1\" >\r\n              <ProjectInner activeClassName=\"active\" className=\"projectInner\" to={`/project/newP`} >\r\n                新建项目\r\n              </ProjectInner>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n              <ProjectInner activeClassName=\"active\" className=\"projectInner\" to={`/project/list`} >\r\n                所有项目\r\n              </ProjectInner>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\">\r\n              <ProjectInner activeClassName=\"active\" className=\"projectInner\" to={`/project/list`} >\r\n                我参与的项目\r\n              </ProjectInner>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\">\r\n              <ProjectInner activeClassName=\"active\" className=\"projectInner\" to={`/project/list`} >\r\n                看过的项目\r\n              </ProjectInner>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\">\r\n              <ProjectInner activeClassName=\"active\" className=\"projectInner\" to={`/project/list`} >\r\n                收藏的项目\r\n              </ProjectInner>\r\n            </Menu.Item>\r\n          </LeftMenu >\r\n        </Container>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst LeftMenu = styled(Menu)`\r\n  width: 256;\r\n`\r\n\r\nconst Container = styled.div`\r\n  width: 280px;\r\n  background-color: #ffffff;\r\n`\r\n\r\nconst ProjectInner = styled(NavLink)`\r\n  font-family    : STZhongsong;\r\n  font-size      : 21px;\r\n`","import { Suspense, lazy, useMemo } from \"react\";\r\nimport { Route, Switch, Redirect, useHistory } from \"react-router\";\r\n\r\nimport TopBar from \"components/TopBar\";\r\nimport Login from \"components/Login\";\r\nimport Register from \"pages/Register\";\r\nimport Home from \"pages/Home\";\r\nimport Loading from \"pages/Loading\";\r\n\r\nimport { useAppDispatch } from \"store/hooks\";\r\nimport { useAppSelector } from \"store/hooks\";\r\nimport { updateLoc } from \"store/features/locSlice\";\r\nimport { setClientC } from \"store/features/moveSlice\";\r\nimport { updateUsername } from \"store/features/meSlice\";\r\n\r\nimport \"./App.css\";\r\nimport LeftBar from \"components/LeftBar\";\r\n\r\nconst Project = lazy(() => import(\"pages/Project\"));\r\nconst User = lazy(() => import(\"pages/User\"));\r\n\r\nexport default function App() {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  history.listen((route) => dispatch(updateLoc(route.pathname)));\r\n\r\n  const login = useAppSelector((store) => store.login);\r\n  const selected = useAppSelector((store) => store.move.selected);\r\n\r\n  const mouseMove = (e: any) => {\r\n    if (selected) {\r\n      dispatch(setClientC([e.clientX, e.clientY]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\" onMouseMove={(e) => mouseMove(e)}>\r\n      <TopBar />\r\n\r\n      <div className=\"behind\">\r\n        {login.chooseLogin && <Login />}\r\n\r\n        <LeftBar />\r\n\r\n        <div className=\"main\">\r\n          <Suspense fallback={<Loading />}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/project\" component={Project} />\r\n              <Route path=\"/user\" component={User} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom\">Made by OpenLab-web @2021 兴趣开放实验室</div>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from '..';\r\nimport { cardUser } from 'types/user';\r\n\r\ninterface State {\r\n  userList: cardUser[];\r\n}\r\n\r\nconst initialState: State = {\r\n  userList: [],\r\n};\r\n\r\nexport const userListSlice = createSlice({\r\n  name: \"userListSlice\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    set(state, action) {\r\n      state.userList = action.payload;\r\n    },\r\n    append(state, action) {\r\n      state.userList = [...state.userList, action.payload];\r\n    },\r\n    clear(state) {\r\n      state.userList = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { set, append, clear } = userListSlice.actions\r\nexport const userList = (state: RootState) => state.userList\r\nexport default userListSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport meReducer from './features/meSlice';\r\nimport loginReducer from './features/loginSlice';\r\nimport locReducer from './features/locSlice';\r\nimport moveReducer from './features/moveSlice';\r\nimport projectListReducer from './features/projectListSlice';\r\nimport userListReducer from './features/userListSlice';\r\nimport projectReducer from './features/projectSlice';\r\nimport userReducer from './features/userSlice';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        me: meReducer,\r\n        login: loginReducer,\r\n        loc: locReducer,\r\n        move: moveReducer,\r\n        projectList: projectListReducer,\r\n        userList: userListReducer,\r\n        project: projectReducer,\r\n        user:userReducer,\r\n    },\r\n}); \r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { BrowserRouter } from 'react-router-dom'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'antd/dist/antd.less';\r\nimport store from 'store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { DevTools, loadServer } from 'jira-dev-tool';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport { ConfigProvider } from 'antd';\r\nimport { Test } from 'pages/Test'\r\n\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <ConfigProvider locale={zhCN}>\r\n        <BrowserRouter >\r\n          <App />\r\n        </BrowserRouter>\r\n      </ConfigProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n  )\r\n\r\nserviceWorker.unregister();","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '..';\r\n\r\ninterface MoveSlice {\r\n    initalC: [number, number];\r\n    clientC: [number, number];\r\n    selected: boolean;\r\n}\r\n\r\nconst initialState: MoveSlice = {\r\n    initalC: [0, 0],\r\n    clientC: [0, 0],\r\n    selected: false,\r\n}\r\n\r\nconst moveSlice = createSlice({\r\n    name: 'move',\r\n    initialState,\r\n    reducers: {\r\n        setInitalC: (state, action: PayloadAction<[x: number, y: number]>) => {\r\n            state.initalC = action.payload\r\n        },\r\n        setClientC: (state, action: PayloadAction<[x: number, y: number]>) => {\r\n            state.clientC = action.payload\r\n        },\r\n        setSelected: (state, action: PayloadAction<boolean>) => {\r\n            state.selected = action.payload\r\n        }\r\n    },\r\n})\r\n\r\nexport const { setInitalC, setClientC,setSelected } = moveSlice.actions\r\nexport const move = (state: RootState) => state.move\r\nexport default moveSlice.reducer"],"sourceRoot":""}