{"version":3,"sources":["components/PulldownDiv/index.tsx","components/AddTags/index.tsx","utils/getArrayDiff.ts","components/CommentList/MyComment.tsx","components/CommentList/index.tsx","components/Tree/Branch.tsx","components/Tree/index.tsx","components/Tag/index.tsx","utils/getRandomColor.ts","components/TitleBar/index.tsx","pages/Project/ProjectShow/PSMain/PSMainNewPro.tsx","pages/Project/ProjectShow/PSMain/PSMainPic.tsx","components/MetionCard/index.tsx","pages/Project/ProjectShow/PSMain/PSMainTeam.tsx","pages/Project/ProjectShow/PSMain/Main.tsx","components/Branch/StyleComponets.ts","components/Avatars/index.tsx","components/MarkDown/index.tsx","config/markdown.ts","components/Branch/Title.tsx","components/Branch/GroundPoints.tsx","components/Branch/ChildPoints.tsx","components/Branch/FamilyPoints.tsx","utils/useClientRect.tsx","components/Branch/index.tsx","pages/Project/ProjectShow/PSMain/ProjectTree/index.tsx","pages/Project/ProjectShow/PSMain/index.tsx","pages/Project/ProjectShow/PSRight/ProSrc.tsx","pages/Project/ProjectShow/PSRight/ProDes.tsx","pages/Project/ProjectShow/PSRight/index.tsx","config/project.ts","pages/Project/ProjectShow/index.tsx"],"names":["PulldownDiv","props","PDInput","styled","Input","style","backgroundColor","overlay","MenuContainer","dropdownOverlay","trigger","Menu","Option","Select","tags","index","MyTag","useState","indexOf","children","select","setselect","dispatch","useAppDispatch","PointerTag","Tag","onClick","delTags","pushTags","color","AddTags","a","b","items","setitems","name","setname","onNameChange","event","target","value","addItem","message","error","Conatiner","Head","Title","map","tag","proTags","Bottom","mode","allowClear","defaultValue","filter","i","width","onSelect","e","onDeselect","placeholder","dropdownRender","menu","display","flexWrap","padding","flex","onChange","cursor","PlusOutlined","item","div","span","confirm","Modal","IconText","React","createElement","icon","text","MyComment","likes","setlikes","dislikes","setdislikes","action","setaction","publish","setpublish","author","userName","useAppSelector","store","me","data","username","useMemo","actions","LikeFilled","LikeOutlined","className","DislikeFilled","DislikeOutlined","MessageOutlined","comments","title","ExclamationCircleOutlined","okText","okType","cancelText","onOk","onCancel","DeleteOutlined","datetime","date","content","undefined","TextArea","CommentList","dataSource","itemLayout","renderItem","Editor","Item","rows","htmlType","loading","submitting","onSubmit","type","CList","coms","setcoms","setsubmitting","setvalue","avatar","src","alt","setTimeout","moment","calendar","length","seq1","Branch","set","btn","seq","num","setnum","tree","project","projectTree","Btn","order","AddBox","onConfirm","success","delChild","SpaceLeft","onBlur","setChild","Space","PointTree","child","setChildKey","key","toString","split","Number","defaultExpandAll","switcherIcon","showLine","showIcon","treeData","pushChild","Container","PointContainer","TreePoint","setNum","setSeq","Point","button","PBP","PBPTop","justifyContent","bordered","setTree","delTreeNode","PBPFoot","marginLeft","PointList","setseq","keyNum","ProgressBar","list","setKey","pointProp","para","pushTree","Tree","ProgressTop","PointPlus","Plus","PointDel","Del","MinusOutlined","TagText","Math","random","AntdTag","TitleBar","loc","cutLine","onBtnClick","size","lineColor","lcColor","link","location","Left","LcText","RightBtn","Link","RightText","lcChild","to","rcChild","PSMainNewPro","PSMainPic","autoplay","Pic","h3","Carousel","MentionCard","logUser","Avator","Name","Button","showMembers","role","mem","MemberList","MCStyled","usernames","isAdmin","PSMainTeam","member","Main","members","linkId","MainLine","Distance","FlexLine","TitleContainer","FlexContainer","CharacterBox","MembersContainer","Avatars","edit","onCloseClick","onAddClick","add","setadd","PlusContainer","CSSTransition","in","classNames","timeout","unmountOnExit","PlusBtn","defaultProps","AvatarContainer","CornerContainer","CloseCircleTwoTone","twoToneColor","ShowMD","components","code","node","inline","match","exec","String","replace","a11yDark","language","PreTag","renderer","copy","CopyOutlined","remarkPlugins","remarkGfm","remarkMath","isText","GroundPoints","rotate","setrotate","mems","setmems","TransationStyle","ghost","_","console","log","MDContainer","ChildPoints","FamilyPoints","visible","setvisible","rect","setRect","entries","setentries","resizeObserver","ResizeObserver","useCallback","getBoundingClientRect","useClientRect","ref","height","setheight","nanoid","element","document","querySelector","clientHeight","appear","mapBranch","branch","ProjectTree","PSMain","updateName","id","proName","setproName","editName","seteditName","proTree","setproTree","btnChange","setbtnChange","isRecruit","splice","TitleInput","block","activeClassName","NavLinkContainer","TitleBtn","fallback","Loading","path","render","NavLink","ProSrc","input","setinput","links","setlinks","isLeader","changeLink","LinksContainer","trim","LinkInput","maxLength","href","LinkContainer","marginBottom","ProDes","description","setdescription","MyInput","Introduce","PSRight","ProIntr","proInfo","stars","watches","startAt","endAt","administrator","ProjectShow","params","iniPro","history","useHistory","SpinContainer","status","subTitle","extra","goBack","Spin"],"mappings":"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","file":"static/js/7.91e55771.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\nimport { Input, Menu, Dropdown, InputProps } from 'antd';\r\nimport { ReactChild, useState, memo, useRef } from 'react';\r\n\r\ninterface pulldownDivProps extends InputProps {\r\n    mention?: boolean;\r\n    dropdownOverlay?: ReactChild;\r\n}\r\n\r\n\r\nexport default function PulldownDiv(props: pulldownDivProps) {\r\n\r\n\r\n    const PDInput = styled(Input)`\r\n        ${{ ...props.style }}\r\n        color:${props.style?.backgroundColor || 'white'}\r\n    `\r\n\r\n    return (\r\n        <div>\r\n            <Dropdown overlay={<MenuContainer >{props.dropdownOverlay}</MenuContainer>} trigger={['click']} >\r\n                <PDInput/>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MenuContainer = styled(Menu)`\r\n    min-height:10rem;\r\n`\r\n","import { Select,  Input, Tag, message, TagProps } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useAppDispatch } from \"store/hooks\";\r\nimport { pushTags, delTags } from \"store/features/projectSlice\";\r\nimport { getArrayDiff } from \"utils/getArrayDiff\";\r\n\r\nconst { Option } = Select;\r\nconst tags = [\"招募队友\", \"创新项目评审\", \"黑客松项目\"];\r\n\r\nlet index = 0;\r\n\r\ninterface myTagType extends TagProps {\r\n  tags: string[];\r\n  children: string;\r\n}\r\n\r\nconst MyTag = (props: myTagType) => {\r\n  const [select, setselect] = useState<boolean>(\r\n    props.tags.indexOf(props.children) !== -1\r\n  );\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const PointerTag = styled(Tag)`\r\n    cursor: pointer;\r\n  `;\r\n\r\n  return (\r\n    <PointerTag\r\n      {...props}\r\n      onClick={() => {\r\n        select\r\n          ? dispatch(delTags(`${props.children}`))\r\n          : dispatch(pushTags(`${props.children}`));\r\n        setselect(!select);\r\n      }}\r\n      color={`${select ? \"green\" : props.color || \"blue\"}`}\r\n    >\r\n      {props.children}\r\n      {select && \"  √\"}\r\n    </PointerTag>\r\n  );\r\n};\r\n\r\nexport default function AddTags(props: { proTags: string[] }) {\r\n  const [items, setitems] = useState<string[]>([\"前端\", \"后端\", \"人工智能\"]);\r\n  const [name, setname] = useState<string>(\"\");\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onNameChange = (event: any) => {\r\n    setname(event.target.value);\r\n  };\r\n\r\n  const addItem = () => {\r\n    tags.indexOf(name) !== -1 || items.indexOf(name) !== -1\r\n      ? message.error(\"该标签已存在\")\r\n      : setitems([name || `New item ${index++}`, ...items]);\r\n    setname(\"\");\r\n  };\r\n\r\n  return (\r\n    <Conatiner>\r\n      <Head>\r\n        <Title>项目类型：</Title>\r\n        <div>\r\n          {tags.map((tag) => {\r\n            return (\r\n              <MyTag key={tag} tags={props.proTags}>\r\n                {tag}\r\n              </MyTag>\r\n            );\r\n          })}\r\n        </div>\r\n      </Head>\r\n      <Bottom>\r\n        <Title>项目标签：</Title>\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          defaultValue={getArrayDiff(props.proTags, tags)}\r\n          style={{ width: \"100%\" }}\r\n          onSelect={(e: string) => {\r\n            dispatch(pushTags(e));\r\n          }}\r\n          onDeselect={(e: string) => {\r\n            dispatch(delTags(e));\r\n          }}\r\n          placeholder=\"请选择项目标签\"\r\n          dropdownRender={(menu) => (\r\n            <div>\r\n              <div style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}>\r\n                <Input\r\n                  style={{ flex: \"auto\" }}\r\n                  value={name}\r\n                  onChange={onNameChange}\r\n                />\r\n                <a\r\n                  style={{\r\n                    flex: \"none\",\r\n                    padding: \"8px\",\r\n                    display: \"block\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={addItem}\r\n                >\r\n                  <PlusOutlined /> 添加自定义标签\r\n                </a>\r\n              </div>\r\n              {menu}\r\n            </div>\r\n          )}\r\n        >\r\n          {items.map((item) => (\r\n            <Option value={item} key={item}>\r\n              {item}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Bottom>\r\n    </Conatiner>\r\n  );\r\n}\r\n\r\nconst Head = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  color: #c0c0c0;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Conatiner = styled.div`\r\n  padding: 16px;\r\n`;\r\n","export const getArrayDiff = <T>(a: T[], b: T[]) => {\r\n  return a.filter(function (i) {\r\n    return b.indexOf(i) < 0;\r\n  });\r\n};\r\n","import React, { createElement, useMemo, useState } from 'react';\r\nimport { Modal, Comment, Space } from 'antd';\r\nimport { MessageOutlined, DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { useAppSelector } from 'store/hooks';\r\nimport { comment } from 'types/comment';\r\nimport CommentList from './index';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst IconText = (props: { icon: any, text: string }) => (\r\n    <Space>\r\n        {React.createElement(props.icon)}\r\n        {props.text}\r\n    </Space>\r\n);\r\n\r\n\r\nexport default function MyComment(props: comment) {\r\n\r\n    const [likes, setlikes] = useState<number>(props.likes);\r\n    const [dislikes, setdislikes] = useState<number>(props.dislikes);\r\n    const [action, setaction] = useState<string>('');\r\n    const [publish, setpublish] = useState<boolean>(true);\r\n    const author = props.author;\r\n    const userName = useAppSelector(store => store.me.data.username)\r\n    \r\n    useMemo(()=>{ \r\n        setlikes(props.likes)\r\n        setdislikes(props.dislikes)\r\n        setaction('')\r\n    },[props])\r\n\r\n    const deleteComment = () => {\r\n        confirm({\r\n            title: '是否删除该动态？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: '是',\r\n            okType: 'danger',\r\n            cancelText: '否',\r\n            onOk() {\r\n                setpublish(false);\r\n            },\r\n            onCancel() {\r\n            },\r\n        });\r\n    }\r\n\r\n    const like = () => {\r\n        if (likes === props.likes) {\r\n            setlikes(props.likes + 1);\r\n            setaction('liked');\r\n        } else {\r\n            setaction('');\r\n            setlikes(props.likes);\r\n        }\r\n        setdislikes(props.dislikes);\r\n    };\r\n\r\n    const dislike = () => {\r\n        if (dislikes === props.dislikes) {\r\n            setdislikes(props.dislikes + 1)\r\n            setaction('disliked');\r\n        } else {\r\n            setdislikes(props.dislikes);\r\n            setaction('');\r\n        }\r\n        setlikes(props.likes);\r\n    };\r\n\r\n    const actions = [\r\n        <span onClick={like}>\r\n            {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\r\n            <span className=\"comment-action\">{likes}</span>\r\n        </span>,\r\n        <span onClick={dislike}>\r\n            {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\r\n            <span className=\"comment-action\">{dislikes}</span>\r\n        </span>,\r\n        <span  key=\"comment-basic-reply-to\"><IconText icon={MessageOutlined} text={`${props.comments || 0}`} key=\"list-vertical-message\" /></span>,\r\n        (author === userName) && <span onClick={() => deleteComment()}><DeleteOutlined />删除</span>,\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {publish && <Comment\r\n                datetime={props.date}\r\n                actions={props.content ? actions : undefined}\r\n                {...props}\r\n            />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { Comment, Avatar, Form, Button, List, Input } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nimport MyComment from \"./MyComment\";\r\n\r\nimport { comments as initalC } from \"config/comments\";\r\nimport { useAppSelector } from \"store/hooks\";\r\nimport { comment } from \"types/comment\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst CommentList = ({comments}: { comments: any }) => (\r\n  <List\r\n    dataSource={comments}\r\n    itemLayout=\"horizontal\"\r\n    renderItem={(props: comment) => <MyComment {...props} />}\r\n  />\r\n);\r\n\r\nconst Editor = (props: {\r\n  onChange: Function;\r\n  onSubmit: Function;\r\n  submitting: boolean;\r\n  value: string;\r\n}) => (\r\n  <>\r\n    <Form.Item>\r\n      <TextArea\r\n        rows={4}\r\n        onChange={(e) => props.onChange(e)}\r\n        value={props.value}\r\n      />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        loading={props.submitting}\r\n        onClick={() => props.onSubmit()}\r\n        type=\"primary\"\r\n      >\r\n        发表\r\n      </Button>\r\n    </Form.Item>\r\n  </>\r\n);\r\n\r\nexport default function CList({comments}:{ comments:comment[]}) {\r\n  const userName = useAppSelector((store) => store.me.data.username);\r\n\r\n  const [coms, setcoms] = useState<Array<{}>>(comments);\r\n  const [submitting, setsubmitting] = useState<boolean>(false);\r\n  const [value, setvalue] = useState<string>(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    setsubmitting(true);\r\n\r\n    setTimeout(() => {\r\n      setsubmitting(false);\r\n      setvalue(\"\");\r\n      setcoms([\r\n        {\r\n          author: userName,\r\n          avatar:\r\n            \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n          content: <p>{value}</p>,\r\n          date: moment().calendar(),\r\n          likes: 0,\r\n          dislikes: 0,\r\n          comments: 0,\r\n        },\r\n        ...coms||[],\r\n      ]);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    setvalue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userName && (\r\n        <Comment\r\n          avatar={\r\n            <Avatar\r\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n              alt=\"Han Solo\"\r\n            />\r\n          }\r\n          content={\r\n            <Editor\r\n              onChange={handleChange}\r\n              onSubmit={handleSubmit}\r\n              submitting={submitting}\r\n              value={value}\r\n            />\r\n          }\r\n        />\r\n      )}\r\n      {(coms||[]).length > 0 && <CommentList comments={coms} />}\r\n    </>\r\n  );\r\n}\r\n","import { ReactJSXElement } from '@emotion/react/types/jsx-namespace';\r\nimport styled from '@emotion/styled';\r\nimport { Tree, Input, Popover, Popconfirm, message, } from 'antd';\r\nimport { DataNode } from 'antd/lib/tree';\r\nimport { ReactChild, useState } from 'react';\r\n\r\nimport { Point, PointPlus, PointDel } from './index';\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\nimport { pushChild, delChild, setChildKey, setChild } from 'store/features/projectSlice';\r\n\r\ninterface propsType {\r\n    seq: number;\r\n    className?: string;\r\n    children: DataNode[];\r\n    btn?: ReactJSXElement;\r\n    set?: boolean;\r\n}\r\n\r\nlet seq1 = 0;\r\n\r\nexport default function Branch(props: propsType) {\r\n\r\n\r\n    const { set, btn, children,  seq } = props\r\n\r\n    const [num, setnum] = useState<number>(0);\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const tree = useAppSelector(store => store.project.projectTree)\r\n\r\n    const Btn = (props: { order?: Array<number> }) => {\r\n\r\n        const order: Array<number> = props.order || []\r\n\r\n        return (\r\n            <>\r\n                <AddBox> \r\n                    {\r\n                        btn ||\r\n                        (set ?\r\n                            <Popconfirm\r\n                                title=\"是否删除该节点？\"\r\n                                onConfirm={() => {\r\n                                    message.success('删除成功');\r\n                                    dispatch(delChild(order))\r\n                                }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <PointDel />\r\n                            </Popconfirm>\r\n                            : <Point />)\r\n                    }\r\n                    {set && (\r\n                        <>\r\n                            <SpaceLeft />\r\n                            <Input\r\n                                placeholder='请输入节点'\r\n                                defaultValue={`${tree[order[0]]?.children[order[1]]?.title}`}\r\n                                onBlur={(e) => { dispatch(setChild({ content: e.target.value, num: order })) }}\r\n                            />\r\n                        </>)}\r\n                </AddBox>\r\n                <Space />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <Space />\r\n            <PointTree>\r\n                <div className='PBPTree'>\r\n                    {\r\n                        set ?\r\n                            children.map((child) => {\r\n                                dispatch(setChildKey([seq, seq1++]))\r\n                                const key: string = child.key.toString()\r\n                                return (<Btn key={key} order={key.split(/-/).map(Number)} />)\r\n                            }) :\r\n                            <Tree\r\n                                defaultExpandAll\r\n                                className='PBPTree'\r\n                                switcherIcon={<Btn />}\r\n                                showLine={true}\r\n                                showIcon={true}\r\n                                treeData={props.children}\r\n                            />\r\n                    }\r\n                </div>\r\n                {\r\n                    set &&\r\n                    <AddBox>\r\n                        <PointContainer content='添加小节点'>\r\n                            <PointPlus onClick={() => {\r\n                                dispatch(pushChild({\r\n                                    seq: seq,\r\n                                    content: { title: '', key: `${seq}-${num}`, children: [] }\r\n                                }));\r\n                                setnum(num + 1);\r\n                            }} />\r\n                        </PointContainer>\r\n                    </AddBox>\r\n                }\r\n            </PointTree>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Space = styled.div`\r\n    margin-bottom:16px;\r\n`\r\n\r\nconst PointTree = styled.div`\r\n    overflow-x: auto;\r\n    margin-left:13px;\r\n`\r\n\r\nconst AddBox = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n`\r\n\r\nconst Container = styled.div`\r\n    width:16px;\r\n    height:16px;\r\n`\r\n\r\nexport const PointContainer = (props: { content?: string, children: ReactChild }) => {\r\n\r\n    return (\r\n        <Popover content={props.content}>\r\n            <Container>\r\n                {props.children}\r\n            </Container>\r\n        </Popover>\r\n    )\r\n}\r\n\r\nconst SpaceLeft = styled.div`\r\n    width:16px;\r\n`","import styled from \"@emotion/styled\"\r\nimport { useState } from \"react\";\r\nimport Branch, { PointContainer } from './Branch';\r\nimport './Tree.css';\r\nimport { DatePicker, Input, Popconfirm, message } from 'antd';\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\nimport { pushTree, delTreeNode, setKey, setTree } from 'store/features/projectSlice';\r\nimport moment from \"moment\";\r\nimport {branch} from 'types/project';\r\n\r\ninterface PointType extends branch {\r\n    setNum: (para: string) => void,\r\n    setSeq: (para: number) => void,\r\n    num: string,\r\n    order: string,\r\n    seq: number,\r\n    set?: boolean\r\n}\r\n\r\nconst TreePoint = (props: PointType) => {\r\n\r\n    const { title, date, children, set, order, seq, setNum, setSeq } = props;\r\n\r\n    const Point = styled.button`\r\n    width           : 16px;\r\n    height          : 16px;\r\n    background-color :#21b0ff;\r\n    border-radius   : 16px;\r\n    `\r\n    const dispatch = useAppDispatch()\r\n\r\n    const tree = useAppSelector(store => store.project.projectTree)\r\n\r\n    return (\r\n        <>\r\n            <PBP className=\"PBP\">\r\n                <Head className=\"head\">\r\n                    <PBPTop className=\"PBPtop\">\r\n                        {set ?\r\n                            <Input\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center'\r\n                                }}\r\n                                placeholder=\"请输入大节点名称\"\r\n                                bordered={false}\r\n                                defaultValue={`${tree[Number(order)]?.title || ''}`}\r\n                                onBlur={e => { dispatch(setTree({ title: e.target.value, num: Number(order) })) }}\r\n                            />\r\n                            : title}\r\n                    </PBPTop>\r\n                    {\r\n                        set ?\r\n                            <Popconfirm\r\n                                title=\"是否删除该节点？\"\r\n                                onConfirm={() => {\r\n                                    dispatch(delTreeNode(Number(order)));\r\n                                    setSeq(seq - 1);\r\n                                    message.success('删除成功');\r\n                                }}\r\n                                okText=\"是\"\r\n                                cancelText=\"否\"\r\n                            >\r\n                                <PointDel />\r\n                            </Popconfirm> :\r\n                            <Point onClick={() => { setNum(order) }} />\r\n                    }\r\n                    <PBPFoot className=\"PBPfoot\">{\r\n                        set ?\r\n                            (\r\n                                <>\r\n                                    <DatePicker\r\n                                        style={{ width: '80%', marginLeft: '10%' }}\r\n                                        placeholder={\"截止日期\"}\r\n                                        defaultValue={\r\n                                            tree[Number(order)]?.date ?\r\n                                                moment(`${tree[Number(order)]?.date}`, 'YYYY-MM-DD') :\r\n                                                undefined\r\n                                        }\r\n                                        onBlur={e => { dispatch(setTree({ date: e.target.value, num: Number(order) })) }}\r\n                                    />\r\n                                </>\r\n                            )\r\n                            : date}</PBPFoot>\r\n                </Head>\r\n                <Branch children={children} set={set} seq={Number(order)} />\r\n            </PBP>\r\n        </>\r\n    )\r\n}\r\n\r\nconst PointList = (props: { list?: branch[], set?: boolean }) => {\r\n\r\n    const [num, setnum] = useState<string>('0');\r\n    const [seq, setseq] = useState<number>(0)\r\n    const dispatch = useAppDispatch()\r\n\r\n    let keyNum: number = 0;\r\n\r\n    return (\r\n        <>\r\n            <ProgressBar className=\"progressBar\">\r\n                {props.list?.map((title) => {\r\n\r\n                    props.set && dispatch(setKey(keyNum++))\r\n\r\n                    const pointProp = {\r\n                        num: num,\r\n                        setNum: (para: string) => setnum(para),\r\n                        setSeq: (para: number) => setseq(para),\r\n                        order: title.key,\r\n                        set: props.set,\r\n                        seq: seq,\r\n                        ...title\r\n                    }\r\n\r\n\r\n                    return (<TreePoint {...pointProp} />)\r\n                })}\r\n                {\r\n                    props.set &&\r\n                    <PBP className=\"PBP\">\r\n                        <Head className=\"head\">\r\n                            <PBPTop className=\"PBPtop\" />\r\n                            <PointContainer content='添加大节点'>\r\n                                <PointPlus onClick={() => { dispatch(pushTree({ title: '', date: '', key: `${seq}`, children: [] })); setseq(seq + 1) }} />\r\n                            </PointContainer>\r\n                            <PBPFoot className=\"PBPfoot\" />\r\n                        </Head> \r\n                    </PBP>\r\n                } \r\n            </ProgressBar>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default function Tree(props: { list?: branch[], set?: boolean }) {\r\n\r\n    const tree = useAppSelector(store => store.project.projectTree)\r\n\r\n    return (\r\n        <>\r\n            <ProgressTop className=\"progressTop\">\r\n                <PointList list={props.set ? tree : props.list} set={props.set} />\r\n            </ProgressTop>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const PointPlus = (props: React.HTMLProps<HTMLButtonElement>) => {\r\n    return (\r\n        <Point onClick={props.onClick} >\r\n            <Plus />\r\n        </Point>\r\n    )\r\n}\r\n\r\nexport const PointDel = (props: React.HTMLProps<HTMLButtonElement>) => {\r\n    return (\r\n        <Point onClick={props.onClick}>\r\n            <Del />\r\n        </Point >\r\n    )\r\n}\r\n\r\nconst ProgressTop = styled.div`\r\n    width: 100%;\r\n    height: 100px;\r\n`\r\n\r\nconst ProgressBar = styled.div`\r\n    width           : 100%;\r\n    height          : 2px;\r\n    background-color: #b4e4ff;\r\n`\r\n\r\nconst PBP = styled.div`\r\n    width     : 150px;  \r\n    ::-webkit-scrollbar-track \r\n    {\r\n        border-radius   : 3px;\r\n        background-color: white;\r\n    }\r\n    .PBPTree {\r\n        overflow-x: auto;\r\n    }\r\n`\r\n\r\nconst Head = styled.div`\r\n    height: 100px;\r\n\r\n`\r\n\r\nconst PBPTop = styled.span`\r\n    height     : 35px;\r\n    font-size  : 20px;\r\n    line-height: 25px;  \r\n`\r\n\r\nconst PBPFoot = styled.span`\r\n    height     : 35px;\r\n    font-size  : 16px;\r\n    line-height: 21px;\r\n    color      : #808080;\r\n`\r\nexport const Point = styled.button`\r\n    width           : 16px;\r\n    height          : 16px;\r\n    background-color :#21b0ff;\r\n    border-radius   : 16px;\r\n    display: flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n`\r\n\r\nconst Plus = styled(PlusOutlined)`\r\n    font-size :16px;\r\n    color :white;\r\n`\r\n\r\nconst Del = styled(MinusOutlined)`\r\n    font-size :16px;\r\n    color :white;\r\n`","import styled from \"@emotion/styled\";\r\nimport { Tag as AntdTag, TagProps } from \"antd\";\r\nimport getRandomColor from \"utils/getRandomColor\";\r\n\r\nexport default function Tag(props: TagProps) {\r\n    return (\r\n        <TagText color={props.color || getRandomColor()} {...props} />\r\n    )\r\n}\r\n\r\nconst TagText = styled(AntdTag)`\r\n  -webkit-text-stroke:0.5px #414141;\r\n  font-weight:1000\r\n`","export default function gatRandomColor() {\r\n  return \"#\" + ((Math.random() * 0xffffff) << 0).toString(16);\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { ReactChild } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\ninterface TitleBarProps {\r\n    title?: boolean;\r\n    button?: boolean;\r\n    link?: string;\r\n    cutLine?: boolean;\r\n    size?: number;\r\n    lineColor?: string;\r\n    lcColor?: string;\r\n    lcChild?: string | ReactChild;\r\n    rcChild?: string | ReactChild;\r\n    onBtnClick?: (e: any) => void;\r\n}\r\n\r\nexport default function TitleBar(props: TitleBarProps) {\r\n\r\n    const loc = useAppSelector(store => store.loc)\r\n\r\n    const { button, title, cutLine, onBtnClick } = props;\r\n\r\n    const size = props.size || 30\r\n    const lineColor = props.lineColor || \"#2fb9f4\"\r\n    const lcColor = props.lcColor || '#a4deff'\r\n    const link = props.link || loc.location\r\n\r\n    const TitleBar = styled.div`\r\n        width: 100%;\r\n        padding-bottom: ${2 / 3 * size}px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        border-bottom: ${(cutLine || title) && '1px solid #e8e8e8'};\r\n        flex-direction:row\r\n    `\r\n\r\n    const Left = styled.div`\r\n        display: flex;\r\n        align-items: center\r\n    `\r\n\r\n    const Title = styled.div`\r\n        width: 6px;\r\n        height: ${size}px;\r\n        background-color: ${lineColor}\r\n    `\r\n\r\n    const Space = styled.div`\r\n        width: 15px\r\n    `\r\n\r\n    const LcText = styled.div`\r\n        height: ${size}px;\r\n        background-color: ${title ? 'white' : lcColor};\r\n        display:flex;\r\n        align-items: center;\r\n        font-size: ${title ? size : (size * 2 / 3)}px;\r\n        font-weight: ${title ? 700 : 500};\r\n    `\r\n    const RightBtn = styled(Link)`\r\n        border:2px solid ${lineColor};\r\n        border-radius:${size * 13 / 40}px;\r\n        display:flex;\r\n        align-items:center;\r\n        color:black;\r\n        font-size:${size * 2 / 3}px;\r\n        padding:${size * 1 / 8}px ${size * 1 / 2}px;\r\n    `\r\n\r\n    const RightText = styled.div`\r\n        color:#a0a0a0;\r\n        font-size:${title ? size * 3 / 4 : size * 13 / 30}px;\r\n        display:flex;\r\n        align-items:center;\r\n    `\r\n\r\n    return (\r\n\r\n        <TitleBar className=\"titleBar\">\r\n\r\n            <Left className=\"left\">\r\n\r\n                <Title />\r\n\r\n                <Space />\r\n\r\n                <LcText >&nbsp;&nbsp;{props.lcChild}&nbsp;&nbsp;</LcText>\r\n\r\n            </Left>\r\n            {\r\n                button ?\r\n                    <RightBtn to={link} onClick={onBtnClick}> <span >{props.rcChild}</span></RightBtn>\r\n                    :\r\n                    <RightText className=\"right\">{props.rcChild} </RightText>\r\n            }\r\n\r\n        </TitleBar>\r\n    )\r\n}\r\n","import CommentList from 'components/CommentList';\r\nimport { comment } from 'types/comment';\r\n\r\nexport default function PSMainNewPro({comments}:{comments:comment[]}) {\r\n    return (\r\n        <div>\r\n            <CommentList comments={comments}/>\r\n        </div>\r\n    )\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Carousel } from 'antd';\r\n\r\n\r\nexport default function PSMainPic() {\r\n    return (\r\n        <Container autoplay>\r\n            <div>\r\n                <Pic>1</Pic>\r\n            </div>\r\n            <div>\r\n                <Pic>2</Pic>\r\n            </div>\r\n            <div>\r\n                <Pic>3</Pic>\r\n            </div>\r\n            <div>\r\n                <Pic>4</Pic>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Pic = styled.h3`\r\n    height:${55400 / 2000}vw;\r\n    color:#fff;\r\n    line-height:160px;\r\n    text-align:center;\r\n    background:#364d79;\r\n`\r\n\r\nconst Container = styled(Carousel)`\r\n    width:${97400 / 2000}vw;\r\n    height:${55400 / 2000}vw;\r\n`","import styled from \"@emotion/styled\";\r\nimport { useAppSelector } from 'store/hooks';\r\nimport {userGetUser} from 'api';\r\n\r\ninterface propsType {\r\n    color?: string;\r\n    size?: number;\r\n    button?: boolean;\r\n    username: string;\r\n}\r\n\r\nexport default function MentionCard(props: propsType) {\r\n\r\n    /* userGetUser() */\r\n\r\n    const { button, username } = props;\r\n\r\n    const logUser = useAppSelector(store => store.me.data.username)\r\n\r\n    const color = props.color || '#a4deff';\r\n    const size = props.size || 51\r\n\r\n    const Container = styled.div`\r\n        background-color: ${color};\r\n        height: ${size}px;\r\n        border-radius: ${size}px;\r\n        display: flex;\r\n        align-items: center;\r\n    `\r\n\r\n    const Avator = styled.div`\r\n        background-color: black;\r\n        height: ${size}px;\r\n        width: ${size}px;\r\n        border-radius: ${size}px;\r\n    `\r\n\r\n    const Name = styled.span`\r\n        margin: 0px 16px;\r\n        font-size: ${size * 24 / 51}px\r\n    `\r\n\r\n    const Button = styled.div`\r\n        margin-right: 16px\r\n    `\r\n\r\n    return (\r\n        <Container>\r\n            <Avator className=\"avator\" />\r\n\r\n            <Name>{username}</Name>\r\n\r\n            {\r\n                button && username !== logUser && <Button><button>X</button></Button>\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import styled from '@emotion/styled';\r\nimport MentionCard from 'components/MetionCard';\r\nimport { useMemo } from 'react';\r\nimport { member } from 'types/project';\r\n\r\nlet showMembers: Array<{ role: string, mem: string[] }> = [{ role: 'leader', mem: [] }]\r\nlet roles: string[] = ['leader']\r\n\r\nconst MemberList = (props: { usernames: string[], isAdmin: boolean }) => {\r\n\r\n    const MCStyled = styled(MentionCard)`\r\n        margin-right: 5px;\r\n    `\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.usernames.map((username) => {\r\n                    return (\r\n                        <MCStyled key={username} username={username} button={props.isAdmin} />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function PSMainTeam(props: { members: member[], isAdmin: boolean }) {\r\n\r\n\r\n    useMemo(() => {\r\n\r\n        showMembers = [{ role: 'leader', mem: [] }]\r\n        roles = ['leader']\r\n\r\n        /* props.members.map((member) => {\r\n            const index = roles.indexOf(member.role);\r\n            if (index === -1) {\r\n                roles.push(member.role);\r\n                showMembers.push({ role: member.role, mem: [member.username] })\r\n            } else {\r\n                showMembers[index].mem.push(member.username)\r\n            }\r\n        }) */\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showMembers.map((member) => {\r\n                    return (\r\n                        <Container key={member.role} className=\"memList\">\r\n                            <Title >{`${member.role} :`}</Title>\r\n                            <MemberList usernames={member.mem} isAdmin={props.isAdmin} />\r\n                        </Container>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Container = styled.div` \r\n    width:100%;\r\n    height:auto\r\n`\r\n\r\nconst Title = styled.span`\r\n    font-size:20px\r\n`","import TitleBar from \"components/TitleBar\";\r\nimport Tree from \"components/Tree\";\r\nimport PSMainNewPro from \"./PSMainNewPro\";\r\nimport PSMainPic from \"./PSMainPic\";\r\nimport PSMainTeam from \"./PSMainTeam\";\r\nimport {branch,member} from 'types/project';\r\nimport { comment } from \"types/comment\";\r\n\r\ninterface propsType{\r\n    isAdmin:boolean,\r\n    members:member[],\r\n    projectTree:branch[], \r\n    linkId:string,\r\n    comments:comment[],\r\n}\r\n\r\nexport default function Main(props:propsType) {\r\n\r\n    const {isAdmin,members,projectTree,linkId,comments} = props;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"psMain_Pic\">\r\n                <PSMainPic />\r\n            </div>\r\n\r\n            <div className=\"psMain_teamForm\">\r\n                <TitleBar lcChild=\"团队架构\" size={30} rcChild={`${isAdmin ? '编辑' : ''}`} button={isAdmin} />\r\n                <div className=\"team\">\r\n                    <PSMainTeam members={members} isAdmin={isAdmin} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className='psMain_NewPro'> \r\n                <TitleBar lcChild=\"最新进展\" size={30} />\r\n                <PSMainNewPro comments={comments}/>\r\n            </div>\r\n\r\n            <div className=\"psMain_Progress\" >\r\n                <TitleBar lcChild=\"完成进度\" size={30} rcChild='查看详情' button link={`/project/show/${linkId}/proTree`}/>\r\n                <Tree list={projectTree} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainLine = styled.div`\r\n  padding: 10px 0px;\r\n  width: 2px;\r\n  background-color: transparent;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Distance = styled.div`\r\n  width: 100px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const FlexLine = styled.div`\r\n  width: 2px;\r\n  background-color: #21b0ff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  min-height: 20px;\r\n`;\r\n\r\nexport const Point = styled.button`\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 16px;\r\n  background-color: #21b0ff;\r\n`;\r\n\r\nexport const TextSpace = styled.button`\r\n  width: 16px;\r\n  height: 16px;\r\n  visibility: hidden;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 16px;\r\n  display: flex;\r\n`;\r\n\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > :not(button:first-of-type) {\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\n\r\nexport const CharacterBox = styled.div`\r\n  white-space: nowrap;\r\n`;\r\nexport const MembersContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import { Avatar, Popover, Badge, Select } from \"antd\";\r\nimport { CloseCircleTwoTone, PlusOutlined } from \"@ant-design/icons\";\r\nimport { simpleUser } from \"types/user\";\r\nimport styled from \"@emotion/styled\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useState } from \"react\";\r\n\r\ninterface AvatarsProps {\r\n  members: simpleUser[];\r\n  edit?: boolean;\r\n  num?: string;\r\n  onCloseClick?: (e: any, username?: string, num?: string) => void;\r\n  onAddClick?: (e: any, num?: string) => void;\r\n}\r\n\r\nAvatars.defaultProps = {\r\n  edit: true,\r\n};\r\n\r\nexport default function Avatars(props: AvatarsProps) {\r\n  const { members, edit, num, onCloseClick, onAddClick } = props;\r\n  const [add, setadd] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Container>\r\n      {members.map((mem) => {\r\n        return (\r\n          <AvatarContainer\r\n            edit={edit}\r\n            key={mem.username}\r\n            username={mem.username}\r\n            onCloseClick={onCloseClick}\r\n            num={num}\r\n          />\r\n        );\r\n      })}\r\n      {edit && (\r\n        <>\r\n          <PlusContainer>\r\n            <CSSTransition\r\n              in={!add}\r\n              classNames=\"plusBox\"\r\n              timeout={300}\r\n              unmountOnExit\r\n            >\r\n              <PlusBtn\r\n                onClick={() => {\r\n                  setadd(true);\r\n                }}\r\n              >\r\n                <PlusOutlined style={{ color: \"white\" }} />\r\n              </PlusBtn>\r\n            </CSSTransition>\r\n          </PlusContainer>\r\n          <PlusContainer>\r\n            <CSSTransition\r\n              in={add}\r\n              classNames=\"plusBox\"\r\n              timeout={300}\r\n              unmountOnExit\r\n            >\r\n              <Select style={{width:\"100px\"}}>\r\n              </Select>\r\n            </CSSTransition>\r\n          </PlusContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\ninterface AvatarContainerProps extends Omit<AvatarsProps, \"members\"> {\r\n  username: string;\r\n}\r\n\r\nexport const AvatarContainer = (props: AvatarContainerProps) => {\r\n  const { username, edit, num, onCloseClick } = props;\r\n\r\n  return (\r\n    <>\r\n      {edit ? (\r\n        <CornerContainer>\r\n          <button\r\n            className=\"avatarCloseBtn\"\r\n            onClick={(e) => {\r\n              onCloseClick && onCloseClick(e, username, num || \"\");\r\n            }}\r\n          >\r\n            <CloseCircleTwoTone twoToneColor=\"#ff4d4f\" />\r\n          </button>\r\n          <button>\r\n            <Popover key={username} content={<b>{username}</b>}>\r\n              <Avatar\r\n                src={\r\n                  \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                }\r\n              />\r\n            </Popover>\r\n          </button>\r\n        </CornerContainer>\r\n      ) : (\r\n        <button>\r\n          <Popover key={username} content={<b>{username}</b>}>\r\n            <Avatar\r\n              src={\r\n                \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n              }\r\n            />\r\n          </Popover>\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAvatarContainer.defaultProps = {\r\n  edit: true,\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst CornerContainer = styled.div`\r\n  position: relative;\r\n  .avatarCloseBtn {\r\n    position: absolute;\r\n    z-index: 999;\r\n    left: 75%;\r\n    top: -25%;\r\n  }\r\n`;\r\n\r\nconst PlusContainer = styled.div`\r\n  .GPbox-enter,\r\n  .GPbox-appear {\r\n    width: 0px;\r\n  }\r\n\r\n  .GPbox-enter-done {\r\n    width: 100px;\r\n    border-radius: 5%;\r\n    background-color: white;\r\n    transition: 300ms;\r\n    border: 1px solid #c0c0c0;\r\n  }\r\n\r\n  .plusBox-exit {\r\n    width: 32px;\r\n    border-radius: 100%;\r\n    border: 1px solid #c0c0c0;\r\n  }\r\n\r\n  .plusBox-exit-active {\r\n    width: 100px;\r\n    border-radius: 5%;\r\n    background-color: white;\r\n    transition: 300ms;\r\n    border: 1px solid #c0c0c0;\r\n  }\r\n\r\n  .plusBox-exit-done {\r\n    width: 100px;\r\n    background-color: white;\r\n    border-radius: 5%;\r\n    border: 1px solid #c0c0c0;\r\n  }\r\n`;\r\n\r\nconst PlusBtn = styled.button`\r\n  height: 32px;\r\n  width: 32px;\r\n  border-radius: 100%;\r\n  background-color: #c0c0c0;\r\n`;\r\n","import ReactMarkdown from \"react-markdown\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport { markdown } from \"config/markdown\";\r\nimport remarkMath from \"remark-math\";\r\nimport styled from \"@emotion/styled\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\nimport { message } from \"antd\";\r\n\r\nexport const ShowMD = (props: React.HTMLProps<HTMLDivElement>) => {\r\n  const { className } = props;\r\n\r\n  return (\r\n    <Container className={`markDownContainer ${className}`}>\r\n      <ReactMarkdown\r\n        children={markdown}\r\n        components={{\r\n          code({ node, inline, className, children }) {\r\n            const match = /language-(\\w+)/.exec(className || \"\");\r\n            const code = String(children).replace(/\\n/, \"\\n\");\r\n\r\n            return !inline && match ? (\r\n              <SyntaxHighlighter\r\n                children={code}\r\n                style={a11yDark}\r\n                language={match[1]}\r\n                PreTag=\"div\"\r\n                renderer={() => (\r\n                  <>\r\n                    <button\r\n                      onClick={() => {\r\n                        copy(code);\r\n                        message.success(\"复制成功\");\r\n                      }}\r\n                    >\r\n                      <CopyOutlined />\r\n                      &nbsp;\r\n                      <span>复制</span>\r\n                    </button>\r\n                    <br />\r\n                    <span>{code}</span>\r\n                  </>\r\n                )}\r\n              />\r\n            ) : (\r\n              <code className={className}>\r\n                <span>{code}</span>\r\n              </code>\r\n            );\r\n          },\r\n        }}\r\n        remarkPlugins={[remarkGfm, remarkMath]}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #f8f8f8;\r\n  padding: 3rem;\r\n  border: 1px solid #d0d7de;\r\n  border-radius: 5px;\r\n  overflow-x: auto;\r\n`;\r\n","export const markdown = `\r\nHere is some js code:\r\n~~~js\r\nconsole.log('It works!')\r\n~~~\r\n\r\nA paragraph with *emphasis* and **strong importance**.\r\n\r\n> A block quote with ~strikethrough~ and a URL: https://reactjs.org.\r\n\r\n[百度](www.baidu.com)\r\n\r\n* Lists\r\n* [ ] todo\r\n  * [ ] todo\r\n    * [ ] todo\r\n* [x] done\r\n\r\nA table:\r\n\r\n| 左对齐 | 右对齐 | 居中对齐 |\r\n| :-----| ----: | :----: |\r\n| 单元格 | 单元格 | 单元格 |\r\n| 单元格 | 单元格 | 单元格 |\r\n`\r\n\r\n// export const markdown = `Here is some js code:\\n~~~js\\nconsole.log('It works!')\\n123'\\\\n'\\n~~~\\nA paragraph with *emphasis* and **strong importance**.\\n> A block quote with ~strikethrough~ and a URL: https://reactjs.org.\\n[百度](www.baidu.com)\\n* Lists\\n* [ ] todo\\n  * [ ] todo\\n    * [ ] todo\\n* [x] done\\n\\nA table:\\n\\n| 左对齐 | 右对齐 | 居中对齐 |\\n| :-----| ----: | :----: |\\n| 单元格 | 单元格 | 单元格 |\\n| 单元格 | 单元格 | 单元格 |`;\r\n","import React, { ReactChild } from \"react\";\r\nimport { FlexContainer, Point, TitleContainer } from \"./StyleComponets\";\r\n\r\ninterface TitleProps extends React.HTMLProps<HTMLDivElement> {\r\n  onBtnClick?: (e: any) => void;\r\n  children?: ReactChild;\r\n  isText?: boolean;\r\n}\r\n\r\nexport default function Title(props: TitleProps) {\r\n  const { onBtnClick, children, isText, className } = props;\r\n\r\n  return (\r\n    <TitleContainer className={className}>\r\n      <FlexContainer>\r\n        {isText ? null : (\r\n          <Point onClick={onBtnClick}>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          </Point>\r\n        )}\r\n        {children}\r\n      </FlexContainer>\r\n    </TitleContainer>\r\n  );\r\n}\r\n\r\nTitle.defaultProps = {\r\n  isText: false,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Button } from \"antd\";\r\nimport Avatars from \"components/Avatars\";\r\nimport { useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { ShowMD } from \"components/MarkDown\";\r\nimport { CharacterBox, FlexLine, MembersContainer } from \"./StyleComponets\";\r\nimport Title from \"./Title\";\r\nimport { simpleUser } from \"types/user\";\r\n\r\ninterface propsType {\r\n  members: simpleUser[];\r\n  title: string;\r\n  num: string;\r\n}\r\n\r\nGroundPoints.defaultProps = {};\r\n\r\nexport default function GroundPoints(props: propsType) {\r\n  const [rotate, setrotate] = useState(false);\r\n\r\n  const { members, title, num } = props;\r\n\r\n  const [mems, setmems] = useState(members);\r\n\r\n  const TransationStyle = styled.div`\r\n    + div {\r\n      .GPbox {\r\n        opacity: 0;\r\n        height: 0px;\r\n        overflow: hidden;\r\n      }\r\n\r\n      .GPbox-enter,\r\n      .GPbox-appear {\r\n        opacity: 0;\r\n        height: 0px;\r\n        overflow: hidden;\r\n      }\r\n\r\n      .GPbox-enter-active,\r\n      .GPbox-appear-active {\r\n        opacity: 1;\r\n        height: 420px;\r\n        transition: 300ms;\r\n        overflow: visible;\r\n      }\r\n\r\n      .GPbox-enter-done {\r\n        overflow: visible;\r\n        opacity: 1;\r\n        height: 420px;\r\n      }\r\n\r\n      .GPbox-exit {\r\n        overflow: visible;\r\n        opacity: 1;\r\n        height: 420px;\r\n      }\r\n\r\n      .GPbox-exit-active {\r\n        overflow: visible;\r\n        height: 0px;\r\n        opacity: 0;\r\n        transition: 300ms;\r\n      }\r\n\r\n      .GPbox-exit-done {\r\n        overflow: hidden;\r\n        height: 0px;\r\n        opacity: 0;\r\n      }\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <>\r\n      <Title\r\n        children={\r\n          <>\r\n            <CharacterBox>{title}</CharacterBox>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                setrotate(!rotate);\r\n              }}\r\n              type=\"primary\"\r\n              ghost\r\n            >\r\n              <CharacterBox>节点详情</CharacterBox>\r\n            </Button>\r\n\r\n            <MembersContainer>\r\n              <CharacterBox>负责人：</CharacterBox>\r\n              <Avatars\r\n                onCloseClick={(_, username, num) => {\r\n                  setmems(\r\n                    mems.filter((mem) => {\r\n                      return mem.username !== username;\r\n                    })\r\n                  );\r\n                  console.log(username);\r\n                  console.log(num);\r\n                }}\r\n                num={num}\r\n                members={mems}\r\n              />\r\n            </MembersContainer>\r\n          </>\r\n        }\r\n        onBtnClick={() => {\r\n          setrotate(!rotate);\r\n        }}\r\n      />\r\n      <FlexLine>\r\n        <>\r\n          <TransationStyle />\r\n\r\n          <div>\r\n            <CSSTransition in={rotate} classNames=\"GPbox\" timeout={300}>\r\n              <Title className=\"GPbox\" isText>\r\n                <>\r\n                  <div />\r\n                  <MDContainer>\r\n                    <ShowMD />\r\n                  </MDContainer>\r\n                </>\r\n              </Title>\r\n            </CSSTransition>\r\n          </div>\r\n        </>\r\n      </FlexLine>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MDContainer = styled.div`\r\n  margin: 10px 0px;\r\n  width: 60vw;\r\n  height: 400px;\r\n`;\r\n","import { ReactChild } from \"react\";\r\nimport { Distance, MainLine } from \"./StyleComponets\";\r\n\r\ninterface ChildProps {\r\n  children?: ReactChild;\r\n}\r\n\r\nexport default function ChildPoints(props: ChildProps) {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <>\r\n      <Distance>\r\n        <div />\r\n        <MainLine>{children}</MainLine>\r\n      </Distance>\r\n    </>\r\n  );\r\n}\r\n","import { ReactChild, useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport ChildPoints from \"./ChildPoints\";\r\nimport { CharacterBox, FlexLine, MembersContainer } from \"./StyleComponets\";\r\nimport Title from \"./Title\";\r\nimport styled from \"@emotion/styled\";\r\nimport Avatars from \"components/Avatars\";\r\nimport { simpleUser } from \"types/user\";\r\nimport { useClientRect } from \"utils/useClientRect\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\ninterface FamilyProps {\r\n  children?: ReactChild;\r\n  members: simpleUser[];\r\n  title: string;\r\n  num: string;\r\n}\r\n\r\nexport default function FamilyPoints(props: FamilyProps) {\r\n  const [visible, setvisible] = useState<boolean>(true);\r\n\r\n  const [rect, ref] = useClientRect();\r\n\r\n  const [height, setheight] = useState<number>(rect?.height || 0);\r\n\r\n  const className: string = `branch${nanoid()}`;\r\n\r\n  const { children, members, title, num } = props;\r\n\r\n  const [mems, setmems] = useState(members);\r\n\r\n  const TransationStyle = styled.div`\r\n    + div {\r\n      .${className}-enter, .${className}-appear {\r\n        opacity: 0;\r\n        height: 0px;\r\n      }\r\n\r\n      .${className}-enter-active, .${className}-appear-active {\r\n        opacity: 1;\r\n        height: ${height}px;\r\n        transition: 300ms;\r\n      }\r\n\r\n      .${className}-exit {\r\n        opacity: 1;\r\n        height: ${height}px;\r\n      }\r\n\r\n      .${className}-exit-active {\r\n        height: 0px;\r\n        opacity: 0;\r\n        transition: 300ms;\r\n      }\r\n\r\n      .${className}-exit-done {\r\n        height: 0px;\r\n        opacity: 0;\r\n        overflow: hidden;\r\n      }\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <>\r\n      <Title\r\n        onBtnClick={(e: any) => {\r\n          setvisible(!visible);\r\n          const element = document.querySelector(`.${className}`);\r\n          element &&\r\n            setheight(\r\n              element.clientHeight !== 0 ? element.clientHeight : height\r\n            );\r\n        }}\r\n      >\r\n        <>\r\n          <CharacterBox>{title}</CharacterBox>\r\n\r\n          <MembersContainer>\r\n            <CharacterBox>负责人：</CharacterBox>\r\n            <Avatars\r\n              onCloseClick={(_, username, num) => {\r\n                setmems(\r\n                  mems.filter((mem) => {\r\n                    return mem.username !== username;\r\n                  })\r\n                );\r\n\r\n                console.log(username);\r\n                console.log(num);\r\n              }}\r\n              num={num}\r\n              members={mems}\r\n            />\r\n          </MembersContainer>\r\n        </>\r\n      </Title>\r\n\r\n      <FlexLine>\r\n        <TransationStyle />\r\n        <div>\r\n          <CSSTransition\r\n            in={visible}\r\n            timeout={300}\r\n            classNames={className}\r\n            appear={true}\r\n          >\r\n            <Container className={className} ref={ref}>\r\n              <ChildPoints children={children} />\r\n            </Container>\r\n          </CSSTransition>\r\n        </div>\r\n      </FlexLine>\r\n    </>\r\n  );\r\n}\r\n\r\nFamilyPoints.defaultProps = {\r\n  members: [],\r\n  title: \"\",\r\n};\r\n\r\nconst Container = styled.div``;\r\n\r\nconst EditBtn = styled.button`\r\n  color: #2fb9f4;\r\n`;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nlet name = \"\";\r\n\r\nexport function useClientRect() {\r\n  const [rect, setRect] = useState<any>();\r\n\r\n  const [entries, setentries] = useState<any>();\r\n\r\n  const resizeObserver = new ResizeObserver((entries: any) => {\r\n    setentries(entries);\r\n  });\r\n\r\n  const ref = useCallback(\r\n    (node) => {\r\n      setTimeout(() => {\r\n        if (node !== null) {\r\n          setRect(node.getBoundingClientRect());\r\n        }\r\n      }, 300);\r\n    },\r\n    [entries]\r\n  );\r\n\r\n  return [rect, ref, resizeObserver];\r\n}\r\n","import { MainLine } from \"./StyleComponets\";\r\nimport GroundPoints from \"./GroundPoints\";\r\nimport FamilyPoints from \"./FamilyPoints\";\r\nimport { branch } from \"types/project\";\r\n\r\ninterface propsType {\r\n  tree: branch[];\r\n}\r\n\r\nconst mapBranch = (tree: branch[]) => {\r\n  return tree.map((branch) => {\r\n    return (\r\n      <>\r\n        {(branch.children||[]).length === 0 ? (\r\n          <GroundPoints\r\n            num={branch.key}\r\n            title={branch.title}\r\n            members={branch.members || []}\r\n          />\r\n        ) : (\r\n          <FamilyPoints\r\n            num={branch.key}\r\n            title={branch.title}\r\n            members={branch.members}\r\n            children={<>{mapBranch(branch.children)}</>}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  });\r\n};\r\n\r\nexport default function Branch(props: propsType) {\r\n  const { tree } = props;\r\n\r\n  return (\r\n    <>\r\n      <MainLine style={{ marginLeft: \"15px\" }}>{mapBranch(tree)}</MainLine>\r\n    </>\r\n  );\r\n}\r\n\r\nBranch.defaultProps = {\r\n  tree: [],\r\n};\r\n","import { branch } from 'types/project';\r\nimport styled from '@emotion/styled';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ShowMD } from 'components/MarkDown';\r\nimport Branch from 'components/Branch';\r\nimport TitleBar from 'components/TitleBar';\r\n\r\ninterface propsType {\r\n    tree: branch[]\r\n}\r\n\r\nexport default function ProjectTree(props: propsType) {\r\n\r\n    const { tree } = props;\r\n\r\n    return (\r\n        <Container>\r\n                <Branch tree={tree} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n`\r\n\r\n","import TitleBar from \"components/TitleBar\";\r\nimport styled from \"@emotion/styled\";\r\nimport { project } from \"types/project\";\r\nimport { Suspense, useMemo, useState } from \"react\";\r\nimport { Alert, Button, Input } from \"antd\";\r\nimport { useAppSelector } from \"store/hooks\";\r\nimport Main from \"./Main\";\r\nimport ProjectTree from \"./ProjectTree\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport Loading from \"pages/Loading\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { proGetProject } from \"api\";\r\n\r\nexport default function PSMain(props: {\r\n  project: Omit<project, \"description\" | \"tags\">;\r\n  isAdmin: boolean;\r\n  id: string;\r\n}) {\r\n  const { name, id, projectTree, members, comments } = props.project;\r\n\r\n  const isAdmin = props.isAdmin;\r\n\r\n  const linkId = props.id;\r\n\r\n  const [proName, setproName] = useState<string>(name);\r\n  const [editName, seteditName] = useState<boolean>(false);\r\n  const [proTree, setproTree] = useState<boolean>(false);\r\n  const [btnChange, setbtnChange] = useState<boolean>(false);\r\n\r\n  let updateName: string;\r\n\r\n  const tags = useAppSelector((store) => store.project.tags);\r\n  const loc = useAppSelector((store) => store.loc.location);\r\n  const isRecruit: boolean = tags.indexOf(\"招募队友\") !== -1;\r\n\r\n  let menu: string[] = loc.split(/[/]/);\r\n\r\n  menu.splice(0, 4);\r\n\r\n  useMemo(() => {\r\n    setproName(name);\r\n  }, [name]);\r\n\r\n  return (\r\n    <Container className=\"psMain\">\r\n      <div className=\"psTitle\">\r\n        <TitleBar\r\n          lcChild={\r\n            editName ? (\r\n              <>\r\n                <TitleInput\r\n                  defaultValue={proName}\r\n                  onChange={(e) => {\r\n                    updateName = e.target.value;\r\n                  }}\r\n                />\r\n                &nbsp;\r\n                <Button\r\n                  type=\"primary\"\r\n                  block\r\n                  onClick={(e: any) => {\r\n                    seteditName(false);\r\n                    setproName(updateName || proName);\r\n                  }}\r\n                  style={{ width: \"10rem\" }}\r\n                >\r\n                  确定\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Title\r\n                  activeClassName=\"active\"\r\n                  to={`/project/show/${linkId}/home`}\r\n                >\r\n                  {proName}\r\n                </Title>\r\n                {menu.map((e, index) => {\r\n                  return (\r\n                    <NavLinkContainer key={index}>\r\n                      {e !== \"home\" && (\r\n                        <>\r\n                          &nbsp;{\">\"}&nbsp;\r\n                          <NavLink\r\n                            activeClassName=\"active\"\r\n                            to={`/project/show/${linkId}/${e}`}\r\n                          >\r\n                            {`${e}`}\r\n                          </NavLink>\r\n                        </>\r\n                      )}\r\n                    </NavLinkContainer>\r\n                  );\r\n                })}\r\n                &nbsp;\r\n                {isRecruit && (\r\n                  <Alert\r\n                    type=\"info\"\r\n                    message=\"本项目处于招募队员阶段\"\r\n                    showIcon\r\n                  />\r\n                )}\r\n              </>\r\n            )\r\n          }\r\n          rcChild={\r\n            <>\r\n              <span>{`#${id}`}</span>\r\n              {props.isAdmin && (\r\n                <>\r\n                  <Space />\r\n                  <TitleBtn\r\n                    onClick={() => {\r\n                      switch (menu[0]) {\r\n                        case \"home\":\r\n                          seteditName(!editName);\r\n                          setbtnChange(!editName);\r\n                          break;\r\n                        case \"proTree\":\r\n                          setproTree(!proTree);\r\n                          setbtnChange(!proTree);\r\n                          break;\r\n                        default:\r\n                          break;\r\n                      }\r\n                    }}\r\n                  >\r\n                    {btnChange ? \"取消\" : \"编辑\"}\r\n                  </TitleBtn>\r\n                </>\r\n              )}\r\n            </>\r\n          }\r\n          size={30}\r\n          title={true}\r\n        />\r\n      </div>\r\n\r\n      <Suspense fallback={<Loading />}>\r\n        <Switch>\r\n          <Route\r\n            path=\"/project/show/:id/home\"\r\n            render={() => (\r\n              <Main\r\n                projectTree={projectTree}\r\n                isAdmin={isAdmin}\r\n                members={members}\r\n                linkId={linkId}\r\n                comments={comments || []}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/project/show/:id/proTree\"\r\n            render={() => <ProjectTree tree={projectTree} />}\r\n          />\r\n          <Redirect to=\"/project/show/:id/home\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  overflow-y: scroll;\r\n  min-width: 83rem;\r\n`;\r\n\r\nconst TitleInput = styled(Input)`\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  width: 50%;\r\n`;\r\n\r\nconst TitleBtn = styled.button`\r\n  border: 2px solid #2fb9f4;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: black;\r\n  font-size: 20px;\r\n  padding: 3px 15px;\r\n`;\r\n\r\nconst Space = styled.div`\r\n  width: 16px;\r\n`;\r\n\r\nconst NavLinkContainer = styled.div`\r\n  font-size: 20px;\r\n  color: #c0c0c0;\r\n`;\r\n\r\nconst Title = styled(NavLink)`\r\n  color: #c0c0c0;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { Alert, Button, Input } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport TitleBar from \"components/TitleBar\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ProSrc(props: { isLeader: boolean; links?: string[] }) {\r\n  const [input, setinput] = useState<boolean>(false);\r\n  const [links, setlinks] = useState<string[]>(props.links || []);\r\n\r\n  const { isLeader } = props;\r\n\r\n  let changeLink = [...links];\r\n\r\n  return (\r\n    <>\r\n      <TitleBar\r\n        title\r\n        lcChild=\"项目主页\"\r\n        size={20}\r\n        button={isLeader}\r\n        rcChild={isLeader ? (input ? \"取消\" : \"编辑\") : \"\"}\r\n        onBtnClick={() => {\r\n          setinput(!input);\r\n        }}\r\n      />\r\n      <LinksContainer className=\"linksContainer\">\r\n        {links.map((link, index) => {\r\n          if (link.trim() === \"\" && !input) {\r\n            changeLink.splice(index, 1);\r\n            setlinks(changeLink);\r\n          }\r\n          return (\r\n            <div key={index}>\r\n              {input ? (\r\n                <LinkInput\r\n                  bordered={false}\r\n                  defaultValue={link}\r\n                  maxLength={100}\r\n                  placeholder=\"请输入网址\"\r\n                  onChange={(e: any) => {\r\n                    changeLink.splice(index, 1, e.target.value || \"\");\r\n                  }}\r\n                />\r\n              ) : (\r\n                <Link href={link}>\r\n                  <LinkContainer>{link}</LinkContainer>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        {input && (\r\n          <>\r\n            <Button\r\n              type=\"dashed\"\r\n              onClick={() => {\r\n                setlinks([...links, \"\"]);\r\n              }}\r\n              style={{ width: \"100%\", marginBottom: \"5px\" }}\r\n              icon={<PlusOutlined />}\r\n            >\r\n              添加网页\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                setlinks(changeLink);\r\n                setinput(false);\r\n              }}\r\n              block\r\n            >\r\n              确定\r\n            </Button>\r\n          </>\r\n        )}\r\n      </LinksContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Link = styled.a`\r\n  font-size: 15px;\r\n  line-height: 42px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst LinkContainer = styled.div`\r\n  text-overflow: ellipsis;\r\n  width: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LinkInput = styled(Input)`\r\n  font-size: 15px;\r\n  line-height: 42px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst LinksContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { Button, Input } from \"antd\";\r\nimport Tag from \"components/Tag\";\r\nimport TitleBar from \"components/TitleBar\";\r\nimport { useMemo, useState } from \"react\";\r\nimport PulldownDiv from \"components/PulldownDiv\";\r\nimport Tags from \"components/AddTags\";\r\nimport { useAppSelector } from \"store/hooks\";\r\n\r\ninterface propsType {\r\n  description: string;\r\n  isLeader: boolean;\r\n  tags: string[];\r\n}\r\n\r\nexport default function ProDes(props: propsType) {\r\n  const [input, setinput] = useState<boolean>(false);\r\n  const [description, setdescription] = useState<string>(props.description);\r\n  const { isLeader } = props;\r\n\r\n  const tags = useAppSelector((store) => store.project.tags);\r\n\r\n  useMemo(() => {\r\n    setdescription(props.description);\r\n  }, [props.description]);\r\n\r\n  let text: string = description;\r\n\r\n  return (\r\n    <>\r\n      <TitleBar\r\n        title={true}\r\n        lcChild=\"项目简介\"\r\n        size={20}\r\n        button={isLeader}\r\n        rcChild={isLeader ? (input ? \"取消\" : \"编辑\") : \"\"}\r\n        onBtnClick={() => {\r\n          setinput(!input);\r\n        }}\r\n      />\r\n      {input ? (\r\n        <MyInput\r\n          defaultValue={description}\r\n          maxLength={100}\r\n          onChange={(e) => {\r\n            text = e.target.value;\r\n          }}\r\n        />\r\n      ) : (\r\n        <Introduce className=\"introduce\">{description}</Introduce>\r\n      )}\r\n      <div className=\"tagsContainer\">\r\n        {tags.map((tag) => {\r\n          return <Tag>{tag}</Tag>;\r\n        })}\r\n      </div>\r\n      <br />\r\n      {input && (\r\n        <>\r\n          <PulldownDiv dropdownOverlay={<Tags proTags={tags} />} />\r\n          <br />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setdescription(text);\r\n              setinput(false);\r\n            }}\r\n            block\r\n          >\r\n            确定\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst MyInput = styled(Input.TextArea)`\r\n  font-size: 20px;\r\n  line-height: 42px;\r\n  font-weight: 500;\r\n  word-wrap: break-word;\r\n  height: auto;\r\n`;\r\n\r\nconst Introduce = styled.div`\r\n  font-size: 20px;\r\n  line-height: 42px;\r\n  font-weight: 500;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  margin-left: 5px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nimport TitleBar from 'components/TitleBar';\r\nimport ProSrc from './ProSrc';\r\nimport ProDes from './ProDes';\r\n\r\ninterface propsType{\r\n    description: string, \r\n    isAdmin: boolean, \r\n    links?: string[],\r\n    tags?: string[]\r\n}\r\n\r\nexport default function PSRight(props: propsType) {\r\n\r\n    const { isAdmin: isLeader,description,links } = props;\r\n\r\n    return (\r\n        <Container className=\"psRight\">\r\n            <ProIntr className=\"projectIntr\">\r\n                <ProDes description={description} tags={props.tags||[]} isLeader={isLeader}/>\r\n            </ProIntr>\r\n            <div className=\"projectSrc\">\r\n                <ProSrc links={links} isLeader={isLeader} />\r\n            </div>\r\n            <div className=\"projectHonor\">\r\n                <TitleBar title={true} lcChild=\"项目荣誉\" size={20} />\r\n                <span >{`用于维护实验室项目的网站项目。`}</span>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: ${(595 / 1920) * 100}%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    min-width:30rem;\r\n    max-width:50rem\r\n`\r\n\r\nconst ProIntr = styled.div`\r\n    width: 100%;\r\n`\r\n\r\n\r\n\r\n","import { project } from 'types/project';\r\n\r\nexport const proInfo: project = {\r\n\r\n    id: 'web123',\r\n    name: '我是一个项目', \r\n    description: '目我是一个项目我是一个项目我是一个项目',\r\n    tags: ['前端', '后端', '人工智能', '创新项目评审', '黑客松项目'],\r\n    likes: 0,\r\n    dislikes: 0,\r\n    stars: 0,\r\n    watches: 0,\r\n    startAt: '2021/1/1',\r\n    endAt: '2021/2/1',\r\n    members: [{ username: '123', role: 'leader' }, { username: '456', role: '前端' }, { username: '789', role: '前端' }, { username: '233', role: '前端' }, { username: '45sa6', role: '前端' }, { username: '78912', role: '前端' }, { username: '23331919', role: '前端' }, { username: '452326', role: '前端' }, { username: '78988', role: '前端' }, { username: '231321233', role: '前端' }, { username: '258', role: '后端' }, { username: '369', role: '后端' }],\r\n    links: [\"https://github.com/baldpsyduck/openproject\", 'https://www.yuque.com/openlab2020'],\r\n    projectTree: [{\r\n        title: '项目开始',\r\n        date: '2021/2/5',\r\n        key: '0',\r\n        members:[{ username:'789', role: '前端'},{ username:'456', role: '前端'}],\r\n        children: [{\r\n            title: 'Idea提出',\r\n            key: '0-0',\r\n            members:[{ username:'123', role: '前端'}],\r\n            children: [{\r\n                title: 'Idea提出',\r\n                members:[{ username:'123', role: '前端'},{ username:'789', role: '前端'},{ username:'456', role: '前端'}],\r\n                key: '0-0-0',\r\n                children:[]\r\n            }]\r\n        }, {\r\n            title: '创新性分析论证',\r\n            members:[{ username:'123', role: '前端'},{ username:'789', role: '前端'},{ username:'456', role: '前端'}],\r\n            key: '0-1',\r\n            children:[]\r\n        },]\r\n    }, {\r\n        title: '环境搭建',\r\n        date: '2021/2/5',\r\n        key: '1',\r\n        members:[{ username:'123', role: '前端'}],\r\n        children: [{\r\n            title: 'Idea提出',\r\n            members:[{ username:'123', role: '前端'}],\r\n            key: '1-0',\r\n            children: [{\r\n                title: 'Idea提出',\r\n                members:[{ username:'123', role: '前端'}],\r\n                key: '1-0-0',\r\n                children:[]\r\n            }, {\r\n                title: '创新性分析论证',\r\n                members:[{ username:'123', role: '前端'}],\r\n                key: '1-0-1',\r\n                children:[]\r\n            },]\r\n        }, {\r\n            title: '创新性分析论证',\r\n            members:[{ username:'123', role: '前端'}],\r\n            key: '1-1',\r\n            children:[]\r\n        },]\r\n    }, {\r\n        title: '测试交付',\r\n        date: '2021/2/5',\r\n        members:[{ username:'123', role: '前端'},{ username:'789', role: '前端'},{ username:'456', role: '前端'}],\r\n        key: '2',\r\n        children: [{\r\n            title: 'Idea提出',\r\n            members:[{ username:'123', role: '前端'}],\r\n            key: '2-0',\r\n            children: [{\r\n                title: 'Idea提出',\r\n                members:[{ username:'123', role: '前端'},{ username:'789', role: '前端'}],\r\n                key: '2-0-0',\r\n                children:[]\r\n            }, {\r\n                title: '创新性分析论证',\r\n                members:[{ username:'123', role: '前端'},{ username:'789', role: '前端'},{ username:'456', role: '前端'}],\r\n                key: '2-0-1',\r\n                children:[]\r\n            },]\r\n        }, {\r\n            title: '创新性分析论证',\r\n            members:[{ username:'456', role: '前端'}],\r\n            key: '2-1',\r\n            children:[]\r\n        },]\r\n    }, {\r\n        title: '测试交付',\r\n        date: '2021/2/5',\r\n        members:[{ username:'123', role: '前端'}],\r\n        key: '2',\r\n        children:[]\r\n    }],\r\n    \r\n}\r\n\r\nexport const blankPro:project={\r\n    id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    tags: [],\r\n    likes: 0,\r\n    dislikes: 0,\r\n    stars: 0,\r\n    watches: 0,\r\n    startAt: \"\",\r\n    endAt: \"\",\r\n    members: [],\r\n    links: [],\r\n    projectTree: []\r\n  } ","import PSMain from \"./PSMain\";\r\nimport PSRight from \"./PSRight\";\r\nimport \"./ProjectShow.css\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { proInfo as iniPro, blankPro } from \"config/project\";\r\nimport { useMemo, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"store/hooks\";\r\nimport { setTags } from \"store/features/projectSlice\";\r\nimport { project } from \"types/project\";\r\nimport { proGetProject } from \"api\";\r\nimport { Result, Button, Spin } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nlet administrator: string[] = [];\r\n\r\nexport default function ProjectShow(props: any) {\r\n  const { id } = props.match.params;\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const username = useAppSelector((store) => store.me.data.username);\r\n  const projectInfo = useAppSelector((store) => store.project);\r\n\r\n  const [proInfo, setproInfo] = useState<project>(iniPro);\r\n  const [error, seterror] = useState<boolean>(false);\r\n  const [loading, setloading] = useState<boolean>(false);\r\n\r\n  /* useMemo(() => {\r\n    setloading(true);\r\n    proGetProject({ id: id })\r\n      .then((req) => {\r\n        req.data ? setproInfo(() => req.data) : seterror(true);\r\n        console.log(req.data);\r\n        proInfo.members.map((mem: any) => {\r\n          if (mem.role === \"leader\") {\r\n            administrator.push(mem.username);\r\n          }\r\n        });\r\n        setloading(false);\r\n      })\r\n      .catch(() => {\r\n        setloading(false);\r\n        seterror(true);\r\n      });\r\n    dispatch(setTags(proInfo.tags));\r\n  }, []); */\r\n\r\n  const isAdmin: boolean = administrator.indexOf(username) !== -1;\r\n  const { description, links, tags, ...project } = proInfo;\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <SpinContainer />\r\n      ) : error ? (\r\n        <Result\r\n          status=\"404\"\r\n          title=\"404\"\r\n          subTitle=\"该项目不存在\"\r\n          extra={\r\n            <Button\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n              type=\"primary\"\r\n            >\r\n              返回上一页\r\n            </Button>\r\n          }\r\n        />\r\n      ) : (\r\n        <Container className=\"projectShow\">\r\n          <PSMain project={{ ...project }} isAdmin={isAdmin} id={id} />\r\n          <div className=\"psCutline\" />\r\n          <PSRight\r\n            isAdmin={isAdmin}\r\n            tags={tags}\r\n            description={description}\r\n            links={links}\r\n          />\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  background-color: white;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst SpinContainer = styled(Spin)`\r\n  height: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n"],"sourceRoot":""}